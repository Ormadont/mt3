{"version":3,"sources":["Options/Options.module.css","Expression/Expression.module.css","ResultOfChecking/ResultOfChecking.module.css","App/App.module.css","AddExression/AddExression.module.css","Expression/Signs/Signs.module.css","Timer/Timer.module.css","ResultOfChecking/ResultOfChecking.js","Options/Options.js","Expression/Signs/Signs.js","Expression/Expression.js","AllExpressions/AllExpressions.js","AddExression/AddExression.js","Timer/Timer.js","stuff/modules.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","radioBtn","btn","header","option","closeBtn","optBtn","back","rightExpression","smallBigSmall","cusBorder","expression","sec_1","sec_2","sec_3","sec_4","sec_5","backRes","headerRes","infoRes","footerRes","btnRes","inputRes","app","center","sessionStatus","factorInput","addExp","sign","answerInput","userAnsweredRight","timer","resultOfChecking","props","doesShow","grade","allExprsCount","rightAnswerCount","errorsCount","react_default","a","createElement","className","styles","onClick","nextCheck","type","value","curMainFactor","onChange","changeMainFactor","endCheck","options","stateOptions","Fragment","showHide","show","id","name","missEnter_handler","checked","missEnter","htmlFor","checkKnowledge","checkKnowledge_handler","showAddFunc","Signs","s","chars","inputRef","useRef","useEffect","checkKnowledgeIsEnd","current","focus","ref","autoFocus","maxLength","onKeyUp","checkAnswer","changeAnswer","userInput","style","verticalAlign","exps","Object","toConsumableArray","expressions","i","expCurNum","factor1","Expression_Signs_Signs","factor2","result","signs","hidedPart","receivedRightAnswer","seconds","console","log","allExpressions","exprs","showedAll","map","exp","index","Expression","key","addExression","autoComplete","onSubmit","min","max","changeFactor","getExprs","mainFactor","leftLimit","rightLimit","length","arr","secondaryFactors","getFactors","factorX","mainFactorIsFirst","Math","random","splice","floor","concat","push","showedPart","border","addin","factors","temp","includes","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mainFactors","getExps","getExpressions","state","showHideAddFunc_handleClick","toggleOption","showHideExpressions_handleClick","showHideOptions_handleClick","appRef","setAppRef","element","focusAppRef","changeMainFactor_handleChange","event","newMainFactor","undefined","target","setState","changeTempFactorX_handleChange","tempFactor1","tempFactor2","addExpression_handleSubmit","rndHidedPart","toString","parseInt","preventDefault","alert","isNaN","nextCheck_handleClick_ResBtn","endCheck_handleClick_ResBtn","prevState","objectSpread","delCurExpression_handleClick","expNextNum","showHideAnswer_handleClick","nextEpression_handleClick","nextExpNum","changeAnswer_handleChange","checkAnswer_handleKeyUp","rightAnswer","getRightAnswer","showNextEpr","nextExpr_handleKeyDown_AppDiv","missEnter_handleChange_optRBtn","e","choice","checkKnowledge_handleChange_optRBtn","prop","showedAllExpressions","interval","setInterval","tick","bind","clearInterval","addFucn","AddExression","AllExpressions","onKeyDown","tabIndex","ResultOfChecking","Timer","Options","_this2","setTimeout","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3b1fab2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"Options_radioBtn__j7QS8\",\"btn\":\"Options_btn__1iqTU\",\"header\":\"Options_header__2Qldx\",\"option\":\"Options_option__2UTw8\",\"closeBtn\":\"Options_closeBtn__3Znc0\",\"optBtn\":\"Options_optBtn__1FhXH\",\"back\":\"Options_back__f1rPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightExpression\":\"Expression_rightExpression__3H7JL\",\"smallBigSmall\":\"Expression_smallBigSmall__2KNo0\",\"cusBorder\":\"Expression_cusBorder__DdBhl\",\"expression\":\"Expression_expression__42gA9\",\"sec_1\":\"Expression_sec_1__105Yu\",\"sec_2\":\"Expression_sec_2__4vhyY\",\"sec_3\":\"Expression_sec_3__u0Heo\",\"sec_4\":\"Expression_sec_4__3rXcl\",\"sec_5\":\"Expression_sec_5__17TkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backRes\":\"ResultOfChecking_backRes__22_6z\",\"headerRes\":\"ResultOfChecking_headerRes__2vGt8\",\"infoRes\":\"ResultOfChecking_infoRes__UqBVi\",\"footerRes\":\"ResultOfChecking_footerRes__1TS_V\",\"btnRes\":\"ResultOfChecking_btnRes__QehFU\",\"inputRes\":\"ResultOfChecking_inputRes__A-TI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__th-hl\",\"center\":\"App_center__3FCQh\",\"sessionStatus\":\"App_sessionStatus__2MNxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"factorInput\":\"AddExression_factorInput__2RZHd\",\"addExp\":\"AddExression_addExp__11YrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"Signs_sign__3zf5U\",\"answerInput\":\"Signs_answerInput__258kk\",\"userAnsweredRight\":\"Signs_userAnsweredRight__SLjrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2Uy1b\"};","import React from 'react';\r\nimport styles from './ResultOfChecking.module.css';\r\n\r\nconst resultOfChecking = props => {\r\n  if (props.doesShow) {\r\n    let grade = ''; // как посчитать оценку?\r\n    const allExprsCount = props.rightAnswerCount + props.errorsCount;\r\n    switch (props.rightAnswerCount) {\r\n      case 9:\r\n        grade = 'Отлично!!!';\r\n        break;\r\n      case 8:\r\n        grade = 'Хорошо!';\r\n        break;\r\n      case 7:\r\n        grade = 'Удовлетворительно.';\r\n        break;\r\n      case 6:\r\n        grade = 'Плохо.';\r\n        break;\r\n      default:\r\n        grade = 'Ужасно!';\r\n        break;\r\n    }\r\n    return (\r\n        <div className={styles.backRes}>\r\n          <h3 className={styles.headerRes}>Результаты</h3>\r\n          <div className={styles.infoRes}>\r\n            <p>Выражений: {allExprsCount}</p>\r\n            <p>Ошибок: {props.errorsCount}</p>\r\n            <p>{grade}</p>\r\n          </div>\r\n          <footer className={styles.footerRes}>\r\n            <button className={styles.btnRes} onClick={props.nextCheck}> Ещё раз</button>\r\n            <input \r\n              className={styles.inputRes}\r\n              type=\"number\" \r\n              value={props.curMainFactor}\r\n              onChange={props.changeMainFactor}\r\n            />\r\n            <button className={styles.btnRes} onClick={props.endCheck}> Вернуться </button>\r\n          </footer>\r\n        </div>\r\n    )\r\n  }    \r\n  else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default resultOfChecking;","import React from 'react';\r\nimport styles from './Options.module.css';\r\n\r\nconst options = props => {\r\n  const stateOptions = props.options;\r\n\r\n  return (\r\n    <>\r\n      <button className={styles.btn} onClick={props.showHide}>Настройки</button>\r\n      {\r\n        stateOptions.show ?\r\n          <section className={styles.back}>\r\n            <div className={styles.header}>\r\n              <h4>Настройки</h4>\r\n            </div>\r\n            <div id=\"missEnter\" className={styles.option}>\r\n              <p>Режим ввода с клавиатуры</p>\r\n              <span>\r\n                <input\r\n                  className={styles.radioBtn}\r\n                  type=\"radio\"\r\n                  name=\"missEnter\"\r\n                  id=\"missEnterOn\"\r\n                  value=\"miss Enter\"\r\n                  onChange={props.missEnter_handler}\r\n                  checked={stateOptions.missEnter} />\r\n                <label htmlFor=\"missEnterOn\">ответ c паузой</label>\r\n              </span>\r\n              <span>\r\n                <input\r\n                  className={styles.radioBtn}\r\n                  type=\"radio\"\r\n                  name=\"missEnter\"\r\n                  id=\"doNotMissEnter\"\r\n                  value=\"do not miss Enter\"\r\n                  onChange={props.missEnter_handler}\r\n                  checked={!stateOptions.missEnter} />\r\n                <label htmlFor=\"doNotMissEnter\">ответ c клавишей Ввод</label>\r\n              </span>\r\n            </div>\r\n            <div id=\"checkKnowledge\" className={styles.option}>\r\n              <p>Режим проверки знаний</p>\r\n              <div>\r\n                <input\r\n                  className={styles.radioBtn}\r\n                  type=\"radio\"\r\n                  name=\"checkKnowledge\"\r\n                  id=\"checkOn\"\r\n                  value=\"start checking\"\r\n                  checked={stateOptions.checkKnowledge}\r\n                  onChange={props.checkKnowledge_handler}\r\n                />\r\n                <label htmlFor=\"checkOn\">включить</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  className={styles.radioBtn}\r\n                  type=\"radio\"\r\n                  name=\"checkKnowledge\"\r\n                  id=\"checkOff\"\r\n                  value=\"finish checking\"\r\n                  checked={!stateOptions.checkKnowledge}\r\n                  onChange={props.checkKnowledge_handler}\r\n                />\r\n                <label htmlFor=\"checkOff\">выключить</label>\r\n              </div>\r\n\r\n            </div>\r\n            <div id=\"showAddFunc\" className={styles.option}>\r\n              <button className={styles.optBtn} onClick={props.showAddFunc}>Показать/скрыть дополнительный функционал</button>\r\n            </div>\r\n            <button className={styles.closeBtn} onClick={props.showHide}>Закрыть</button>\r\n          </section> : null\r\n      }\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default options;","import React, {useRef, useEffect} from 'react';\r\nimport styles from './Signs.module.css'\r\n\r\nconst Signs = (props) => {\r\n  let s = props.chars;\r\n  const inputRef = useRef(null);\r\n  \r\n  useEffect(\r\n    () => {\r\n      if (s.type ==='input' && !props.checkKnowledgeIsEnd)  {\r\n        inputRef.current.focus()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (!s) {\r\n    s =\r\n    <input \r\n      ref={inputRef}\r\n      autoFocus\r\n      type=\"text\"\r\n      name=\"answer\"\r\n      maxLength={2}\r\n      className={styles.answerInput}\r\n      onKeyUp={props.checkAnswer}\r\n      onChange={props.changeAnswer}\r\n      value={props.userInput}\r\n      id=\"\" />\r\n  } \r\n  let style = null;\r\n  switch (props.chars) {\r\n    case '*':\r\n      style = {verticalAlign: \"-15%\"}\r\n      break;\r\n    case '=':\r\n      style = {verticalAlign: \"10%\"}\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\nreturn (\r\n    <span className={styles.sign} style={style}>\r\n      {s}\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Signs;","import React from 'react';\r\nimport Signs from './Signs/Signs';\r\nimport styles from './Expression.module.css';\r\n\r\nconst expression = props => {\r\n    const exps = [...props.expressions];\r\n    const i = props.expCurNum;\r\n    // console.log(`Expression.js props=`, props);\r\n    let factor1 = <Signs chars={exps[i].factor1} />;\r\n    let factor2 = <Signs chars={exps[i].factor2} />\r\n    let result = <Signs chars={exps[i].factor1 * exps[i].factor2} />\r\n    const signs = \r\n        <Signs chars=''\r\n            checkAnswer={props.checkAnswer}\r\n            changeAnswer={props.changeAnswer}\r\n            userInput={props.userInput}\r\n            checkKnowledgeIsEnd={props.checkKnowledgeIsEnd}\r\n        />;\r\n    switch (exps[i].hidedPart) {\r\n        case 'factor1':\r\n            factor1 = signs;\r\n            break;\r\n        case 'factor2':\r\n            factor2 = signs;\r\n            break;\r\n        case 'result':\r\n            result = signs;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    let style = props.receivedRightAnswer ? styles.rightExpression : '';\r\n    if (props.checkKnowledge) {\r\n        style += styles.cusBorder + ' ';\r\n        switch (props.seconds) {\r\n            case 9:\r\n            case 8:\r\n                style += styles.sec_5 + ' ';\r\n                break;\r\n            case 7:\r\n            case 6:\r\n                style += styles.sec_4 + ' ';\r\n                break;\r\n            case 5:\r\n            case 4:\r\n                style += styles.sec_3 + ' ';\r\n                break;\r\n            case 3:\r\n            case 2:\r\n                style += styles.sec_2 + ' ';\r\n                break;\r\n            case 1:\r\n            case 0:\r\n                style += styles.sec_1 + ' ';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    console.log('style = ', style);\r\n    \r\n    return (\r\n        <div className={style + ' ' + styles.expression}>\r\n            {factor1}\r\n            <Signs chars='*' />\r\n            {factor2}\r\n            <Signs chars='=' />\r\n            {result}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default expression;","import React from 'react';\r\nimport Expression from '../Expression/Expression';\r\n\r\nconst allExpressions = props => {\r\n    let exprs = null;\r\n    if (props.showedAll) {\r\n      exprs = props.expressions.map( (exp,index) => \r\n        <Expression\r\n          expressions={props.expressions}\r\n          expCurNum={index}\r\n          key={exp.key} />\r\n      )\r\n    }\r\n    return (\r\n        <>\r\n          <button onClick={props.showHide}>Показать все выражения</button>\r\n          {exprs}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default allExpressions;","import React from 'react';\r\nimport styles from './AddExression.module.css';\r\n\r\nconst addExression = props => {\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={props.addExp}>\r\n            <span>Первый множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor1\"\r\n                value={props.factor1}\r\n                onChange={props.changeFactor} /><br />\r\n            <span>Второй множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor2\"\r\n                value={props.factor2}\r\n                onChange={props.changeFactor} /><br />\r\n            <input\r\n                className={styles.addExp}\r\n                type=\"submit\"\r\n                value=\"Добавить выражение\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default addExression;","import React from 'react';\r\nimport styles from './Timer.module.css'\r\n\r\nconst timer = props => {\r\n    return <div className = {styles.timer}>\r\n        { props.checkKnowledge ? props.timer : null }\r\n    </div>\r\n}\r\n\r\nexport default timer;","// Генерация массива выражений для состояния App в конструкторе при первом запуске \r\n// и далее каждый раз при выборе нового основного множителя.\r\n// Подразумевается генерация номера текущего выражения будет в конструкторе \r\n// или позже, но перед функцией render().\r\n// На вход три аргумента: первый - основной множитель, второй и третий - \r\n// границы прочих множителей\r\n// Скрытая часть выражения при генерации определяется случайно\r\n// Порядок выражений определяется случайно при генерации\r\nexport const getExprs = (mainFactor, leftLimit, rightLimit) => {\r\n    const length = rightLimit - leftLimit + 1; //длина массива включая концы границ\r\n    const arr = [];\r\n    const secondaryFactors=getFactors(length, leftLimit);\r\n    // заполнение массива\r\n    for (let i = 0; i < length; i++) {\r\n        // множители, undefined\r\n        let factor1, factor2, factorX, mainFactorIsFirst;\r\n        (Math.random() < 0.5) ? mainFactorIsFirst = false : mainFactorIsFirst = true;\r\n        factorX = secondaryFactors.splice(0,1);\r\n        let hidedPart = ''; // что скрывается?\r\n        if (mainFactorIsFirst) {\r\n            factor1 = mainFactor;\r\n            factor2 = factorX[0];\r\n            if (Math.floor(Math.random() * 2) === 0) hidedPart = 'result';\r\n            else hidedPart = 'factor2';\r\n        } else {\r\n            factor1 = factorX[0];\r\n            factor2 = mainFactor;\r\n            if (Math.floor(Math.random() * 2) === 0) hidedPart = 'result';\r\n            else hidedPart = 'factor1';\r\n        }\r\n        // уникальный идентификатор - ключ\r\n        const key=`${i}-${Math.floor(Math.random() * 100)}`;\r\n        arr.push({factor1: factor1, factor2: factor2, hidedPart: hidedPart, showedPart: '', key:key});\r\n    }\r\n    return arr;\r\n}\r\n\r\n// массив вспомогательных множителей\r\n// аргументы: первый - правая граница (левая - 0), второй - модификатор\r\n// например, на вход - 3 и 0, на выходе [1, 0, 2]\r\n// например, на вход - 4 и 2, на выходе [3, 5, 4, 2]\r\nexport const getFactors = (border, addin) => {\r\n    let factors=[];\r\n    while (factors.length < border) {\r\n        const temp = Math.floor(Math.random() * border) + addin;\r\n        if ((factors.length === 0) || (!factors.includes(temp))) {\r\n            factors.push(temp);\r\n        } \r\n    }\r\n    // console.log(`factors=${factors}, len=${factors.length}`);\r\n    return factors;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport ResultOfChecking from '../ResultOfChecking/ResultOfChecking';\r\nimport Options from '../Options/Options';\r\nimport Expression from '../Expression/Expression';\r\nimport AllExpressions from '../AllExpressions/AllExpressions';\r\nimport AddExression from '../AddExression/AddExression';\r\nimport Timer from '../Timer/Timer';\r\nimport { getExprs as getExpressions, getFactors } from '../stuff/modules';\r\n\r\nclass App extends Component {\r\n  mainFactors = []; // основные множители\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainFactor: -1,\r\n      expressions: [],\r\n      expCurNum: 0,\r\n      userInput: '',\r\n      tempFactor1: 0, tempFactor2: 0,\r\n      \r\n      receivedRightAnswer: false,\r\n      seconds: 10, // время в режиме проверки знанний\r\n      checkKnowledgeIsEnd: false,\r\n      rightAnswerCount: 0,\r\n      errorsCount: 0,\r\n      options: {\r\n        show: false,\r\n        showedAllExpressions: false,\r\n        missEnter: false,\r\n        checkKnowledge: false, // режим проверки знаний\r\n        showAddFunc: false,\r\n        leftLimit: 1,\r\n        rightLimit: 9,\r\n        // скрытие только произведения (result) - простой режим ?\r\n        // другие внешние виды\r\n      }\r\n    }\r\n    this.mainFactors = getFactors(9, 1);\r\n    this.state.mainFactor = this.mainFactors.splice(0, 1)[0]; // текущий основной множитель\r\n    this.state.expressions = getExpressions(this.state.mainFactor, this.state.options.leftLimit, this.state.options.rightLimit); // выражения\r\n  }\r\n\r\n  // Получить новые выражения\r\n  getExps = mainFactor => getExpressions(mainFactor, this.state.options.leftLimit, this.state.options.rightLimit);\r\n\r\n  showHideAddFunc_handleClick = () => this.toggleOption(\"showAddFunc\");\r\n  showHideExpressions_handleClick = () => this.toggleOption(\"showedAllExpressions\");\r\n  showHideOptions_handleClick = () => this.toggleOption(\"show\");\r\n\r\n  // автофокус на головной тэг после получения ответа\r\n  // только для обычного режима с паузой \r\n  appRef = null;\r\n  setAppRef = element => this.appRef = element;\r\n  focusAppRef = () => {\r\n    if (this.appRef) this.appRef.focus();\r\n  }\r\n\r\n  changeMainFactor_handleChange = event => {\r\n    let newMainFactor;\r\n    if (event === undefined) {\r\n      newMainFactor = Math.floor(Math.random()*9)+1;\r\n    } else {\r\n      newMainFactor = event.target.value;\r\n    }\r\n    const expressions = this.getExps(newMainFactor);\r\n    if ((0 < newMainFactor) && (newMainFactor < 10)) {\r\n      this.setState({\r\n        userInput: '',\r\n        receivedRightAnswer: false,\r\n        mainFactor: newMainFactor,\r\n        expressions: expressions,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeTempFactorX_handleChange = event => {\r\n    (event.target.name === 'factor1') ? this.setState({ tempFactor1: event.target.value }) : this.setState({ tempFactor2: event.target.value })\r\n  }\r\n\r\n  addExpression_handleSubmit = event => {\r\n    const expressions = [...this.state.expressions];\r\n    let rndHidedPart = '';\r\n    switch (Math.floor(Math.random() * 3)) {\r\n      case 0:\r\n        rndHidedPart = 'factor1';\r\n        break;\r\n      case 1:\r\n        rndHidedPart = 'factor2';\r\n        break;\r\n      default:\r\n        rndHidedPart = 'result';\r\n        break;\r\n    }\r\n    const key = `addedManually${expressions.length.toString()}`;\r\n    const expression = {\r\n      factor1: parseInt(this.state.tempFactor1),\r\n      factor2: parseInt(this.state.tempFactor2),\r\n      hidedPart: rndHidedPart,\r\n      showedPart: '',\r\n      key: key,\r\n    }\r\n    expressions.push(expression);\r\n    event.preventDefault(); //не дать выполнить действие по умолчанию - обновить страницу\r\n    if ((expression.factor1 === 0) || (expression.factor2 === 0))\r\n      alert(\"Множитель не должен быть равен 0\")\r\n    else if (isNaN(expression.factor1) || isNaN(expression.factor1))\r\n      alert(\"Множитель должен быть числом\")\r\n    else\r\n      this.setState({ expressions: expressions });\r\n  }\r\n\r\n  nextCheck_handleClick_ResBtn = () => {\r\n    this.setState({\r\n      checkKnowledgeIsEnd: false,\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    });\r\n  }\r\n  \r\n  // вернуться к обычному режиму\r\n  endCheck_handleClick_ResBtn = () => {\r\n    this.setState({\r\n      checkKnowledgeIsEnd: false,\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    });\r\n    this.setState( prevState => ({\r\n      options: { ...prevState.options, checkKnowledge: false }\r\n    }));\r\n  }\r\n\r\n  tick() {\r\n    if (!this.state.checkKnowledgeIsEnd) {\r\n      if (this.state.options.checkKnowledge && this.state.seconds>0 && !this.state.options.show) {\r\n        this.setState(\r\n          prevState => ({ seconds: prevState.seconds - 1 })\r\n        )\r\n      } else if (this.state.seconds === 0) {\r\n        this.setState({\r\n          checkKnowledgeIsEnd: true,\r\n        });\r\n        this.changeMainFactor_handleChange(); // получить новый основной множитель\r\n        // ?! показать статистику\r\n        // alert('проверка окончена');       \r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.interval = setInterval(this.tick.bind(this), 1000);\r\n  }\r\n  componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const timer = <span>{this.state.seconds}</span>\r\n    let addFucn = this.state.options.showAddFunc ? (\r\n      <>\r\n        <button onClick={this.nextEpression_handleClick}>Другое выражение</button>\r\n        <AddExression\r\n          factor1={this.state.tempFactor1}\r\n          factor2={this.state.tempFactor2}\r\n          addExp={this.addExpression_handleSubmit.bind(this)}\r\n          changeFactor={this.changeTempFactorX_handleChange.bind(this)}\r\n        />\r\n        <button onClick={this.delCurExpression_handleClick}>Удалить текущее выражение</button>\r\n        <button onClick={this.showHideAnswer_handleClick} >Показать/скрыть ответ</button>\r\n        <AllExpressions\r\n          showedAll={this.state.options.showedAllExpressions}\r\n          expressions={this.state.expressions}\r\n          showHide={this.showHideExpressions_handleClick} />\r\n      </>\r\n    ) : null;\r\n\r\n    const sessionStatus =\r\n      <>\r\n        <div className={styles.sessionStatus}>\r\n          <span>Выражений: {this.state.expressions.length}</span>\r\n          <span>Основных множителей: {this.mainFactors.length + 1}</span>\r\n        </div>\r\n      </>\r\n    return (\r\n      <div className={styles.app} //AppDiv !\r\n        ref={this.setAppRef}\r\n        onKeyDown={this.nextExpr_handleKeyDown_AppDiv} // верный ответ принимается по нажатию клавиши\r\n        tabIndex=\"0\"\r\n      >\r\n        <ResultOfChecking \r\n          errorsCount={this.state.errorsCount}\r\n          rightAnswerCount={this.state.rightAnswerCount}\r\n          doesShow={this.state.checkKnowledgeIsEnd}\r\n          curMainFactor={this.state.mainFactor}\r\n          changeMainFactor={this.changeMainFactor_handleChange}\r\n          nextCheck={this.nextCheck_handleClick_ResBtn}\r\n          endCheck={this.endCheck_handleClick_ResBtn}\r\n        />\r\n\r\n        {/* header */}\r\n        <header className={styles.center}>\r\n          <Timer\r\n            checkKnowledge = {this.state.options.checkKnowledge}\r\n            timer = {timer}\r\n          />\r\n          <label>Основной множитель</label>\r\n          <input value={this.state.mainFactor} onChange={this.changeMainFactor_handleChange} type=\"number\"></input>\r\n          <Options\r\n            options={this.state.options}\r\n            missEnter_handler={this.missEnter_handleChange_optRBtn}\r\n            checkKnowledge_handler={this.checkKnowledge_handleChange_optRBtn}\r\n            showHide={this.showHideOptions_handleClick}\r\n            showAddFunc={this.showHideAddFunc_handleClick}\r\n          />\r\n        </header>\r\n\r\n        {/* board */}\r\n        <section className={styles.center}>\r\n          <Expression\r\n            expressions={this.state.expressions}\r\n            expCurNum={this.state.expCurNum}\r\n            userInput={this.state.userInput}\r\n            receivedRightAnswer={this.state.receivedRightAnswer}\r\n            checkAnswer={this.checkAnswer_handleKeyUp}\r\n            changeAnswer={this.changeAnswer_handleChange}\r\n            checkKnowledgeIsEnd={this.state.checkKnowledgeIsEnd}\r\n            checkKnowledge={this.state.options.checkKnowledge}\r\n            seconds={this.state.seconds}\r\n          />\r\n        </section>\r\n\r\n        {/* footer */}\r\n        <footer>\r\n          {sessionStatus}\r\n          {/* дополнительный функционал */}\r\n          {addFucn}\r\n        </footer>\r\n        {/* journal */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  delCurExpression_handleClick = () => {\r\n    if (this.state.expressions.length > 1) {\r\n      const expressions = [...this.state.expressions];\r\n      expressions.splice(this.state.expCurNum, 1);\r\n      const expNextNum = Math.floor(Math.random() * expressions.length);\r\n      this.setState({\r\n        expressions: expressions,\r\n        expCurNum: expNextNum,\r\n      });\r\n    } else if (this.mainFactors.length > 0 && !this.state.options.checkKnowledge) {\r\n      const mainFactor = this.mainFactors.splice(0, 1)[0];\r\n      const expressions = this.getExps(mainFactor);\r\n      const expNextNum = Math.floor(Math.random() * expressions.length);\r\n      this.setState({\r\n        mainFactor: mainFactor,\r\n        expressions: expressions,\r\n        expCurNum: expNextNum,\r\n      });\r\n    } else if (this.state.options.checkKnowledge) {\r\n      this.setState({ checkKnowledgeIsEnd: true })\r\n      this.changeMainFactor_handleChange(); // получить новый основной множитель\r\n    }\r\n  }\r\n\r\n  // измениние состояния - в текущем выражении убрать скрытый элемент, \r\n  // сохранив информацию о нём\r\n  showHideAnswer_handleClick = () => {\r\n    const index = this.state.expCurNum;\r\n    const expressions = [...this.state.expressions];\r\n    if (expressions[index].hidedPart !== 'nothing') {\r\n      expressions[index].showedPart = expressions[index].hidedPart;\r\n      expressions[index].hidedPart = 'nothing';\r\n    } else {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = \"\";\r\n    }\r\n    this.setState({ expressions: expressions });\r\n  }\r\n\r\n  nextEpression_handleClick = () => {\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    if (expressions[index].showedPart !== '') {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = '';\r\n    }\r\n    const nextExpNum = Math.floor(Math.random() * (expressions.length));\r\n    this.setState({ \r\n      userInput: '',\r\n      expressions: expressions,\r\n      expCurNum: nextExpNum,\r\n    });\r\n  }\r\n\r\n  // изменение ответа\r\n  changeAnswer_handleChange = event => this.setState({ userInput: event.target.value });\r\n  \r\n  getRightAnswer() {\r\n    let rightAnswer = 0;\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    const expression = expressions[index];\r\n    switch (expression.hidedPart) {\r\n      case 'factor1':\r\n        rightAnswer = expression.factor1;\r\n        break;\r\n      case 'factor2':\r\n        rightAnswer = expression.factor2;\r\n        break;\r\n      case 'result':\r\n        rightAnswer = expression.factor1 * expression.factor2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return rightAnswer;\r\n  }\r\n\r\n  // проверка ответа\r\n  checkAnswer_handleKeyUp = event => {\r\n    let rightAnswer = this.getRightAnswer();\r\n    if (this.state.options.checkKnowledge) { // режим проверки знаний\r\n      if (event.key === \"Enter\" \r\n      && parseInt(this.state.userInput) === parseInt(rightAnswer) \r\n      && !this.state.checkKnowledgeIsEnd) { \r\n       this.delCurExpression_handleClick();\r\n       this.setState({\r\n         userInput: '',\r\n       });\r\n      this.setState(prevState => ({ \r\n         seconds: prevState.seconds + 5 \r\n      }));\r\n      this.setState(prevState => ({ \r\n        rightAnswerCount: prevState.rightAnswerCount + 1 \r\n      }));\r\n\r\n      //  console.log('Режим проверки: ответ верный ', event.target.value);\r\n      } else if (event.key === \"Enter\" && !this.state.checkKnowledgeIsEnd) {\r\n        // ответ неправильный и нажата клавиша ввод\r\n        this.delCurExpression_handleClick();\r\n        this.setState({\r\n          userInput: '',\r\n        });\r\n        this.setState(prevState => ({ \r\n          errorsCount: prevState.errorsCount + 1 \r\n        }));\r\n        // ? уменьшить очки\r\n\r\n        // ? сохранить ошибку для работы над ошибками\r\n      } \r\n    } else if (parseInt(event.target.value) === parseInt(rightAnswer)) { // правильный ответ?\r\n      this.showNextEpr();\r\n    }\r\n  }\r\n\r\n  showNextEpr() {\r\n      // ответ верный: \r\n      // сбросить текущее значение ввод\r\n      this.setState({ userInput: '' })\r\n\r\n      // показать ответ, \r\n      // убрать поле ввода, \r\n      this.showHideAnswer_handleClick();\r\n      \r\n      // отметить факт верного выражения\r\n      this.setState({ receivedRightAnswer: true })\r\n\r\n      // удалить данное выражение, но не сразу!\r\n      if (this.state.options.missEnter) {\r\n        setTimeout(() => {\r\n          this.delCurExpression_handleClick();\r\n          this.setState({ receivedRightAnswer: false });\r\n        }, 3000);\r\n      }\r\n      this.focusAppRef();\r\n  }\r\n\r\n  // для режима без паузы\r\n  nextExpr_handleKeyDown_AppDiv = event => {\r\n    if ((event.key === \"Enter\") && (this.state.receivedRightAnswer) && (!this.state.options.missEnter) && !this.state.options.checkKnowledge) {\r\n      this.delCurExpression_handleClick();\r\n      this.setState({ receivedRightAnswer: false })\r\n    }\r\n  }\r\n\r\n  missEnter_handleChange_optRBtn = e => {\r\n    const choice = e.target.value;\r\n    this.setState( prevState => ({\r\n      options: {...prevState.options, missEnter: choice === \"miss Enter\"}\r\n    }));\r\n  }\r\n\r\n  checkKnowledge_handleChange_optRBtn = e => {\r\n    const choice = e.target.value;\r\n    this.setState( prevState => ({\r\n      options: { ...prevState.options, checkKnowledge: choice === \"start checking\"}\r\n    }))\r\n    this.changeMainFactor_handleChange();\r\n    this.setState({\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    })\r\n  }\r\n\r\n  toggleOption = prop => {\r\n    this.setState( prevState => {\r\n      const options = prevState.options;\r\n      options[prop] = !options[prop];\r\n      return {\r\n        options: options,\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}