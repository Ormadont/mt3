{"version":3,"sources":["Options/Options.module.css","Expression/Expression.module.css","App/App.module.css","ResultOfChecking/ResultOfChecking.module.css","MobMainFactors/MobMainFactors.module.css","AddExression/AddExression.module.css","Expression/Signs/Signs.module.css","backgroundScene/backgroundScene.module.css","Expression/mobileSigns/MobileSigns.module.css","Timer/Timer.module.css","backgroundScene/backgroundScene.js","ResultOfChecking/ResultOfChecking.js","Options/Options.js","Expression/Signs/Signs.js","Expression/mobileSigns/MobileSigns.js","Expression/Expression.js","AllExpressions/AllExpressions.js","AddExression/AddExression.js","Timer/Timer.js","stuff/modules.js","MobMainFactors/MobMainFactors.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","radioBtn","header","option","optBtn","back","rightExpression","smallBigSmall","cusBorder","expression","sec_1","sec_2","sec_3","sec_4","sec_5","app","center","sessionStatus","btn","closeBtn","headerRes","infoRes","footerRes","btnRes","inputRes","panel","factor","factors","factorInput","addExp","sign","answerInput","userAnsweredRight","downLeft","downRight","downCenter","default","upLeft","upRight","upCenter","timer","backgroundScene","props","react_default","a","createElement","className","styles","children","resultOfChecking","grade","allExprsCount","rightAnswerCount","errorsCount","Fragment","onClick","nextCheck","type","value","curMainFactor","onChange","changeMainFactor","endCheck","options","stateOptions","id","name","missEnter_handler","checked","missEnter","htmlFor","checkKnowledge","checkKnowledge_handler","showAddFunc","Signs","s","chars","inputRef","useRef","useEffect","checkKnowledgeIsEnd","current","focus","ref","autoFocus","maxLength","onKeyUp","checkAnswer","changeAnswer","userInput","style","verticalAlign","mobileSigns","signs","onClickFunc","checkMobAnswer","showMMFPane","undefined","color","paddingLeft","position","exps","Object","toConsumableArray","expressions","i","expCurNum","factor1","Expression_Signs_Signs","factor2","result","isMobileMode","MobileSigns","hidedPart","receivedRightAnswer","seconds","topAnswers","answers","bottomAnswers","onlyExpression","allExpressions","exprs","showedAll","map","exp","index","Expression","key","showHide","addExression","autoComplete","onSubmit","min","max","changeFactor","getExprs","mainFactor","leftLimit","rightLimit","length","arr","secondaryFactors","getFactors","factorX","mainFactorIsFirst","Math","random","splice","floor","concat","push","showedPart","border","addin","temp","includes","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","mobMainFactors","mainFactors","rnd","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getExps","getExpressions","state","showHideAddFunc_handleClick","toggleOption","showHideExpressions_handleClick","showHideOptions_handleClick","changeMainFactor_handleChange","event","newMainFactor","target","getSetNewMainFactor","get6Answers","expNum","rightAnswer","curExpr","x","find","el","shift","origArray","mixUpArray","randomIndex","rand_element","mixUp","setState","isShowMMFPanel","changeTempFactorX_handleChange","tempFactor1","tempFactor2","addExpression_handleSubmit","rndHidedPart","toString","parseInt","preventDefault","alert","isNaN","nextCheck_handleClick_ResBtn","getRndAnswers","endCheck_handleClick_ResBtn","prevState","objectSpread","checkMobAnswer_handleClick","answer","getRightAnswer","console","log","delCurExpression_handleClick","showHideAnswer_handleClick","setTimeout","changeMainFactor_handleClick_mobile","selectedMainFactor","showHide_MobileMainFactorPanel_handleClick","expNextNum","rndAnswers","nextEpression_handleClick","nextExpNum","changeAnswer_handleChange","checkAnswer_handleKeyUp_input","showNextEpr","nextExpr_handleKeyDown_AppDiv","missEnter_handleChange_optRBtn","e","choice","checkKnowledge_handleChange_optRBtn","prop","show","showedAllExpressions","interval","setInterval","tick","bind","clearInterval","_this2","src_backgroundScene_backgroundScene","Options","addFucn","AddExression","AllExpressions","resultsOfChecking","ResultOfChecking","marginRight","MobMainFactors","appRef","onKeyDown","tabIndex","Timer","_this3","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.734e1cc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"Options_radioBtn__j7QS8\",\"header\":\"Options_header__2Qldx\",\"option\":\"Options_option__2UTw8\",\"optBtn\":\"Options_optBtn__1FhXH\",\"back\":\"Options_back__f1rPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightExpression\":\"Expression_rightExpression__3H7JL\",\"smallBigSmall\":\"Expression_smallBigSmall__2KNo0\",\"cusBorder\":\"Expression_cusBorder__DdBhl\",\"expression\":\"Expression_expression__42gA9\",\"sec_1\":\"Expression_sec_1__105Yu\",\"sec_2\":\"Expression_sec_2__4vhyY\",\"sec_3\":\"Expression_sec_3__u0Heo\",\"sec_4\":\"Expression_sec_4__3rXcl\",\"sec_5\":\"Expression_sec_5__17TkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__th-hl\",\"center\":\"App_center__3FCQh\",\"sessionStatus\":\"App_sessionStatus__2MNxe\",\"btn\":\"App_btn__2ZewD\",\"closeBtn\":\"App_closeBtn__3-Hax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRes\":\"ResultOfChecking_headerRes__2vGt8\",\"infoRes\":\"ResultOfChecking_infoRes__UqBVi\",\"footerRes\":\"ResultOfChecking_footerRes__1TS_V\",\"btnRes\":\"ResultOfChecking_btnRes__QehFU\",\"inputRes\":\"ResultOfChecking_inputRes__A-TI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"MobMainFactors_panel__2jbtC\",\"factor\":\"MobMainFactors_factor__29OzZ\",\"factors\":\"MobMainFactors_factors__2x_9S\",\"header\":\"MobMainFactors_header__1m8hf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"factorInput\":\"AddExression_factorInput__2RZHd\",\"addExp\":\"AddExression_addExp__11YrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"Signs_sign__3zf5U\",\"answerInput\":\"Signs_answerInput__258kk\",\"userAnsweredRight\":\"Signs_userAnsweredRight__SLjrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"backgroundScene_back__3dldH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downLeft\":\"MobileSigns_downLeft__1HoG2\",\"downRight\":\"MobileSigns_downRight__7MuBT\",\"downCenter\":\"MobileSigns_downCenter__3f0Ua\",\"default\":\"MobileSigns_default__3gLXP\",\"upLeft\":\"MobileSigns_upLeft__1oVBV\",\"upRight\":\"MobileSigns_upRight__YtUpx\",\"upCenter\":\"MobileSigns_upCenter__3Aefm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2Uy1b\"};","import React from 'react';\r\nimport styles from './backgroundScene.module.css';\r\n\r\nconst backgroundScene = props => {\r\n    return (\r\n        <div className={styles.back}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backgroundScene;","import React from 'react';\r\nimport styles from './ResultOfChecking.module.css';\r\n\r\nconst resultOfChecking = props => {\r\n\r\n  let grade = '';\r\n  const allExprsCount = props.rightAnswerCount + props.errorsCount;\r\n  switch (props.rightAnswerCount) {\r\n    case 9:\r\n      grade = 'Отлично!!!';\r\n      break;\r\n    case 8:\r\n      grade = 'Хорошо!';\r\n      break;\r\n    case 7:\r\n      grade = 'Удовлетворительно.';\r\n      break;\r\n    case 6:\r\n      grade = 'Плохо.';\r\n      break;\r\n    default:\r\n      grade = 'Ужасно!';\r\n      break;\r\n  }\r\n  return (\r\n    <>\r\n      <h3 className={styles.headerRes}>Результаты</h3>\r\n      <div className={styles.infoRes}>\r\n        <p>Выражений: {allExprsCount}</p>\r\n        <p>Ошибок: {props.errorsCount}</p>\r\n        <p>{grade}</p>\r\n      </div>\r\n      <footer className={styles.footerRes}>\r\n        <button className={styles.btnRes} onClick={props.nextCheck}> Ещё раз</button>\r\n        <input\r\n          className={styles.inputRes}\r\n          type=\"number\"\r\n          value={props.curMainFactor}\r\n          onChange={props.changeMainFactor}\r\n        />\r\n        <button className={styles.btnRes} onClick={props.endCheck}> Вернуться </button>\r\n      </footer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default resultOfChecking;","import React from 'react';\r\nimport styles from './Options.module.css';\r\n\r\nconst options = props => {\r\n  const stateOptions = props.options;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <h4>Настройки</h4>\r\n      </div>\r\n      <div id=\"missEnter\" className={styles.option}>\r\n        <p>Режим ввода с клавиатуры</p>\r\n        <span>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"missEnter\"\r\n            id=\"missEnterOn\"\r\n            value=\"miss Enter\"\r\n            onChange={props.missEnter_handler}\r\n            checked={stateOptions.missEnter} />\r\n          <label htmlFor=\"missEnterOn\">ответ c паузой</label>\r\n        </span>\r\n        <span>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"missEnter\"\r\n            id=\"doNotMissEnter\"\r\n            value=\"do not miss Enter\"\r\n            onChange={props.missEnter_handler}\r\n            checked={!stateOptions.missEnter} />\r\n          <label htmlFor=\"doNotMissEnter\">ответ c клавишей Ввод</label>\r\n        </span>\r\n      </div>\r\n      <div id=\"checkKnowledge\" className={styles.option}>\r\n        <p>Режим проверки знаний</p>\r\n        <div>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"checkKnowledge\"\r\n            id=\"checkOn\"\r\n            value=\"start checking\"\r\n            checked={stateOptions.checkKnowledge}\r\n            onChange={props.checkKnowledge_handler}\r\n          />\r\n          <label htmlFor=\"checkOn\">включить</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"checkKnowledge\"\r\n            id=\"checkOff\"\r\n            value=\"finish checking\"\r\n            checked={!stateOptions.checkKnowledge}\r\n            onChange={props.checkKnowledge_handler}\r\n          />\r\n          <label htmlFor=\"checkOff\">выключить</label>\r\n        </div>\r\n\r\n      </div>\r\n      <div id=\"showAddFunc\" className={styles.option}>\r\n        <button className={styles.optBtn} onClick={props.showAddFunc}>Показать/скрыть дополнительный функционал</button>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default options;","import React, {useRef, useEffect} from 'react';\r\nimport styles from './Signs.module.css'\r\n\r\nconst Signs = (props) => {\r\n  let s = props.chars;\r\n  const inputRef = useRef(null);\r\n  \r\n  useEffect(\r\n    () => {\r\n      if (s.type ==='input' && !props.checkKnowledgeIsEnd)  {\r\n        inputRef.current.focus()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (s===\"\") {\r\n    s =\r\n    <input \r\n      ref={inputRef}\r\n      autoFocus\r\n      type=\"text\"\r\n      name=\"answer\"\r\n      maxLength={2}\r\n      className={styles.answerInput}\r\n      onKeyUp={props.checkAnswer}\r\n      onChange={props.changeAnswer}\r\n      value={props.userInput}\r\n      id=\"\" />\r\n  } \r\n  let style = null;\r\n  switch (props.chars) {\r\n    case '*':\r\n      style = {verticalAlign: \"-15%\"}\r\n      break;\r\n    case '=':\r\n      style = {verticalAlign: \"10%\"}\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\nreturn (\r\n    <span className={styles.sign} style={style}>\r\n      {s}\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Signs;","import React from 'react';\r\nimport styles from './MobileSigns.module.css';\r\n\r\nconst mobileSigns = props => {\r\n  let signs = props.chars;\r\n  let style = {};\r\n  // changeMainFactor\r\n  let onClickFunc = props.checkMobAnswer \r\n    ? () => props.checkMobAnswer(props.chars)\r\n    : props.changeMainFactor \r\n      ? () => props.changeMainFactor(props.chars)\r\n      : props.showMMFPane;\r\n  if (props.chars === undefined) {\r\n    signs = '?';\r\n    style = {color: \"white\"};\r\n    onClickFunc = null;\r\n  } else {\r\n    style = props.chars>9 ? {\r\n      paddingLeft: 0,\r\n    } : {};\r\n  }\r\n  const position = props.position === undefined ? 'default' : props.position; \r\n  return (\r\n    <span\r\n      style={style}\r\n      className={styles[position]}\r\n      onClick={onClickFunc}\r\n    >{signs}</span> \r\n  )\r\n}\r\n\r\nexport default mobileSigns;\r\n\r\n","import React from 'react';\r\nimport Signs from './Signs/Signs';\r\nimport styles from './Expression.module.css';\r\nimport MobileSigns from './mobileSigns/MobileSigns';\r\n// import MobileAnswers from './MobileAnswers/MobileAnswers';\r\n\r\nconst expression = props => {\r\n    const exps = [...props.expressions];\r\n    const i = props.expCurNum;\r\n    let factor1 = <Signs chars={exps[i].factor1} />;\r\n    let factor2 = <Signs chars={exps[i].factor2} />\r\n    let result = <Signs chars={exps[i].factor1 * exps[i].factor2} />\r\n    const signs = props.isMobileMode ?\r\n        <MobileSigns/> :\r\n        <Signs chars=''\r\n            checkAnswer={props.checkAnswer}\r\n            changeAnswer={props.changeAnswer}\r\n            userInput={props.userInput}\r\n            checkKnowledgeIsEnd={props.checkKnowledgeIsEnd}\r\n        />;\r\n\r\n    switch (exps[i].hidedPart) {\r\n        case 'factor1':\r\n            factor1 = signs;\r\n            break;\r\n        case 'factor2':\r\n            factor2 = signs;\r\n            break;\r\n        case 'result':\r\n            result = signs;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    let style = props.receivedRightAnswer ? styles.rightExpression : '';\r\n    if (props.checkKnowledge) { // режим проверки\r\n        style += styles.cusBorder + ' ';\r\n        switch (props.seconds) {\r\n            case 9:\r\n            case 8:\r\n                style += styles.sec_5 + ' ';\r\n                break;\r\n            case 7:\r\n            case 6:\r\n                style += styles.sec_4 + ' ';\r\n                break;\r\n            case 5:\r\n            case 4:\r\n                style += styles.sec_3 + ' ';\r\n                break;\r\n            case 3:\r\n            case 2:\r\n                style += styles.sec_2 + ' ';\r\n                break;\r\n            case 1:\r\n            case 0:\r\n                style += styles.sec_1 + ' ';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // const variantsCount = 6; // количество вариантов ответа\r\n\r\nconst topAnswers = props.isMobileMode && !props.receivedRightAnswer ? (<>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"upLeft\" chars={props.answers[0]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"upCenter\" chars={props.answers[1]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"upRight\" chars={props.answers[2]}/>\r\n    </>): null;\r\n    const bottomAnswers = props.isMobileMode && !props.receivedRightAnswer ? (<>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"downLeft\" chars={props.answers[3]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"downCenter\" chars={props.answers[4]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"downRight\" chars={props.answers[5]}/>\r\n    </>): null;\r\n    const onlyExpression = (<>\r\n            {factor1}\r\n            <Signs chars='*' />\r\n            {factor2}\r\n            <Signs chars='=' />\r\n            {result}\r\n    </>);\r\n    return (\r\n        <div className={style + ' ' + styles.expression}>\r\n            {topAnswers}\r\n            {onlyExpression}\r\n            {bottomAnswers}\r\n        </div>)\r\n}\r\n\r\nexport default expression;","import React from 'react';\r\nimport Expression from '../Expression/Expression';\r\n\r\nconst allExpressions = props => {\r\n    let exprs = null;\r\n    if (props.showedAll) {\r\n      exprs = props.expressions.map( (exp,index) => \r\n        <Expression\r\n          expressions={props.expressions}\r\n          expCurNum={index}\r\n          key={exp.key} />\r\n      )\r\n    }\r\n    return (\r\n        <>\r\n          <button onClick={props.showHide}>Показать все выражения</button>\r\n          {exprs}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default allExpressions;","import React from 'react';\r\nimport styles from './AddExression.module.css';\r\n\r\nconst addExression = props => {\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={props.addExp}>\r\n            <span>Первый множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor1\"\r\n                value={props.factor1}\r\n                onChange={props.changeFactor} /><br />\r\n            <span>Второй множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor2\"\r\n                value={props.factor2}\r\n                onChange={props.changeFactor} /><br />\r\n            <input\r\n                className={styles.addExp}\r\n                type=\"submit\"\r\n                value=\"Добавить выражение\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default addExression;","import React from 'react';\r\nimport styles from './Timer.module.css'\r\n\r\nconst timer = props => {\r\n    return <div className = {styles.timer}>\r\n        { props.checkKnowledge ? props.timer : null }\r\n    </div>\r\n}\r\n\r\nexport default timer;","// Генерация массива выражений для состояния App в конструкторе при первом запуске \r\n// и далее каждый раз при выборе нового основного множителя.\r\n// Подразумевается генерация номера текущего выражения будет в конструкторе \r\n// или позже, но перед функцией render().\r\n// На вход три аргумента: первый - основной множитель, второй и третий - \r\n// границы прочих множителей\r\n// Скрытая часть выражения при генерации определяется случайно\r\n// Порядок выражений определяется случайно при генерации\r\nexport const getExprs = (mainFactor, leftLimit, rightLimit) => {\r\n    const length = rightLimit - leftLimit + 1; //длина массива включая концы границ\r\n    const arr = [];\r\n    const secondaryFactors=getFactors(length, leftLimit);\r\n    // заполнение массива\r\n    for (let i = 0; i < length; i++) {\r\n        // множители, undefined\r\n        let factor1, factor2, factorX, mainFactorIsFirst;\r\n        (Math.random() < 0.5) ? mainFactorIsFirst = false : mainFactorIsFirst = true;\r\n        factorX = secondaryFactors.splice(0,1);\r\n        let hidedPart = ''; // что скрывается?\r\n        if (mainFactorIsFirst) {\r\n            factor1 = mainFactor;\r\n            factor2 = factorX[0];\r\n            if (Math.floor(Math.random() * 2) === 0) hidedPart = 'result';\r\n            else hidedPart = 'factor2';\r\n        } else {\r\n            factor1 = factorX[0];\r\n            factor2 = mainFactor;\r\n            if (Math.floor(Math.random() * 2) === 0) hidedPart = 'result';\r\n            else hidedPart = 'factor1';\r\n        }\r\n        // уникальный идентификатор - ключ\r\n        const key=`${i}-${Math.floor(Math.random() * 100)}`;\r\n        arr.push({factor1: factor1, factor2: factor2, hidedPart: hidedPart, showedPart: '', key:key});\r\n    }\r\n    return arr;\r\n}\r\n\r\n// массив вспомогательных множителей из целых чисел\r\n// аргументы: первый - правая граница (левая - 0) и количество множителей, второй - модификатор\r\n// например, на вход - 3 и 0, на выходе [0, 9, 2]\r\n// например, на вход - 4 и 2, на выходе [3, 5, 4, 2]\r\nexport const getFactors = (border, addin) => {\r\n    let factors=[];\r\n    while (factors.length < border) {\r\n        const temp = Math.floor(Math.random() * 9) + addin;\r\n        if ((factors.length === 0) || (!factors.includes(temp))) {\r\n            factors.push(temp);\r\n        } \r\n    }\r\n    // console.log(`factors=${factors}, len=${factors.length}`);\r\n    return factors;\r\n}\r\n\r\n\r\n\r\n//перемешать произвольный массив\r\nexport function mixUp(origArray) {\r\n    const mixUpArray = [];\r\n    while (origArray.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * origArray.length); //рандомный индекс первого массива\r\n        const rand_element = origArray.splice(randomIndex, 1) //удалённый элемент (массив) первого массива для второго массива\r\n        mixUpArray.push(rand_element[0]); //добавляем элемент в новый массив\r\n    }\r\n    return mixUpArray;\r\n}\r\n\r\nexport var isMobile = {\r\n    Android: function() {\r\n        return navigator.userAgent.match(/Android/i);\r\n    },\r\n    BlackBerry: function() {\r\n        return navigator.userAgent.match(/BlackBerry/i);\r\n    },\r\n    iOS: function() {\r\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n    },\r\n    Opera: function() {\r\n        return navigator.userAgent.match(/Opera Mini/i);\r\n    },\r\n    Windows: function() {\r\n        return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\r\n    },\r\n    any: function() {\r\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n    }\r\n};\r\n\r\n// Used to detect whether the users browser is an mobile browser\r\nfunction isMobile_alt() {\r\n    ///<summary>Detecting whether the browser is a mobile browser or desktop browser</summary>\r\n    ///<returns>A boolean value indicating whether the browser is a mobile browser or not</returns>\r\n\r\n    if (sessionStorage.desktop) // desktop storage \r\n        return false;\r\n    else if (localStorage.mobile) // mobile storage\r\n        return true;\r\n\r\n    // alternative\r\n    var mobile = ['iphone','ipad','android','blackberry','nokia','opera mini','windows mobile','windows phone','iemobile']; \r\n    for (var i in mobile) if (navigator.userAgent.toLowerCase().indexOf(mobile[i].toLowerCase()) > 0) return true;\r\n\r\n    // nothing found.. assume desktop\r\n    return false;\r\n}","import React from 'react';\r\nimport styles from './MobMainFactors.module.css';\r\nimport MobileSigns from '../Expression/mobileSigns/MobileSigns'\r\n\r\nconst mobMainFactors = props => {\r\n    const factors = props.mainFactors.map((factor,index) => {\r\n        const rnd = Math.floor(Math.random()*100); \r\n        return (\r\n            <span key={`${index}-${rnd}`} className={styles.factor}>\r\n                <MobileSigns \r\n                    chars={factor}\r\n                    changeMainFactor={props.changeMainFactor}                 \r\n                />\r\n            </span>)});\r\n    return (\r\n        <div className={styles.panel}>\r\n            <h4 className={styles.header}>Новый основной множитель:</h4>\r\n            <div className={styles.factors}>\r\n                {factors}\r\n            </div>\r\n        </div>)}\r\n\r\nexport default mobMainFactors;","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport BackgroundScene from '../backgroundScene/backgroundScene';\r\nimport ResultOfChecking from '../ResultOfChecking/ResultOfChecking';\r\nimport Options from '../Options/Options';\r\nimport Expression from '../Expression/Expression';\r\nimport AllExpressions from '../AllExpressions/AllExpressions';\r\nimport AddExression from '../AddExression/AddExression';\r\nimport Timer from '../Timer/Timer';\r\nimport { getExprs as getExpressions, getFactors, isMobile, mixUp } from '../stuff/modules';\r\nimport MobMainFactors from '../MobMainFactors/MobMainFactors';\r\nimport MobileSigns from '../Expression/mobileSigns/MobileSigns';\r\n\r\nclass App extends Component {\r\n  mainFactors = []; // основные множители\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainFactor: -1,\r\n      expressions: [],\r\n      expCurNum: 0,\r\n      rndAnswers: [],\r\n      userInput: '',\r\n      tempFactor1: 0, tempFactor2: 0,\r\n      receivedRightAnswer: false,\r\n      seconds: 10, // время в режиме проверки знаний\r\n      checkKnowledgeIsEnd: false,\r\n      rightAnswerCount: 0, // количество верных ответов\r\n      errorsCount: 0,\r\n      isShowMMFPanel: false,\r\n      options: {\r\n        show: false,\r\n        isMobileMode: true,\r\n        showedAllExpressions: false,\r\n        missEnter: false,\r\n        checkKnowledge: false, // режим проверки знаний\r\n        showAddFunc: false,\r\n        leftLimit: 1,\r\n        rightLimit: 9,\r\n        // другие внешние виды\r\n      }\r\n    }\r\n    this.mainFactors = getFactors(9, 1);\r\n    this.state.mainFactor = this.mainFactors.splice(0, 1)[0]; // текущий основной множитель\r\n    this.state.expressions = getExpressions(this.state.mainFactor, this.state.options.leftLimit, this.state.options.rightLimit); // выражения\r\n    this.state.options.isMobileMode = isMobile.any() === null ? false : true;\r\n    this.state.rndAnswers = this.get6Answers(this.state.expCurNum, this.state.mainFactor, this.state.expressions);\r\n  }\r\n\r\n  // Получить новые выражения\r\n  getExps = mainFactor => getExpressions(mainFactor, this.state.options.leftLimit, this.state.options.rightLimit);\r\n\r\n  showHideAddFunc_handleClick = () => this.toggleOption(\"showAddFunc\");\r\n  showHideExpressions_handleClick = () => this.toggleOption(\"showedAllExpressions\");\r\n  showHideOptions_handleClick = () => this.toggleOption(\"show\");\r\n\r\n  changeMainFactor_handleChange = event => {\r\n    let newMainFactor;\r\n    if (event === undefined) {\r\n      newMainFactor = Math.floor(Math.random() * 9) + 1;\r\n    } else {\r\n      newMainFactor = event.target.value;\r\n    }\r\n    this.getSetNewMainFactor(newMainFactor);\r\n    \r\n  }\r\n\r\n  // expNum - номер выражения, для которого идёт расчёт ответов\r\n  // mainFactor - значение основного множетиля текущего или нового\r\n  get6Answers = (expNum, mainFactor, expressions) => {\r\n    let rightAnswer = -1;\r\n    let answers = [];\r\n    const curExpr = expressions[expNum];\r\n\r\n    switch(curExpr.hidedPart) {\r\n      case 'result':\r\n        rightAnswer = curExpr.factor1 * curExpr.factor2;\r\n        answers = getFactors(6,1).map(x=>x*mainFactor);\r\n        break;\r\n      case 'factor1':\r\n        rightAnswer = curExpr.factor1;\r\n        answers = getFactors(6,1);\r\n        break;\r\n      case 'factor2':\r\n        rightAnswer = curExpr.factor2;\r\n        answers = getFactors(6,1);\r\n        break;\r\n      default:\r\n        rightAnswer = -1;\r\n        break;\r\n    }\r\n    // сформировать случайные ответы на основе главного множителя\r\n    \r\n        // Если набор ответов не содержит правильного ответа, \r\n    // то убрать один ответ, добавить правильный и перемешать.\r\n    if (!answers.find(el=>el===rightAnswer)) { \r\n      answers.shift();\r\n      answers.push(rightAnswer);\r\n    }\r\n    answers = mixUp(answers);\r\n    return answers;\r\n  }\r\n\r\n  getSetNewMainFactor = newMainFactor => {\r\n    const expressions = this.getExps(newMainFactor);\r\n    if ((0 < newMainFactor) && (newMainFactor < 10)) {\r\n      this.setState({\r\n        userInput: '',\r\n        receivedRightAnswer: false,\r\n        mainFactor: newMainFactor,\r\n        expressions: expressions,\r\n      });\r\n    }\r\n    if (this.state.isShowMMFPanel) this.setState({isShowMMFPanel: false});\r\n    if (this.state.options.isMobileMode) {\r\n      // getAnswers();\r\n    } \r\n  }\r\n\r\n  changeTempFactorX_handleChange = event => {\r\n    (event.target.name === 'factor1') ? this.setState({ tempFactor1: event.target.value }) : this.setState({ tempFactor2: event.target.value })\r\n  }\r\n\r\n  addExpression_handleSubmit = event => {\r\n    const expressions = [...this.state.expressions];\r\n    let rndHidedPart = '';\r\n    switch (Math.floor(Math.random() * 3)) {\r\n      case 0:\r\n        rndHidedPart = 'factor1';\r\n        break;\r\n      case 1:\r\n        rndHidedPart = 'factor2';\r\n        break;\r\n      default:\r\n        rndHidedPart = 'result';\r\n        break;\r\n    }\r\n    const key = `addedManually${expressions.length.toString()}`;\r\n    const expression = {\r\n      factor1: parseInt(this.state.tempFactor1),\r\n      factor2: parseInt(this.state.tempFactor2),\r\n      hidedPart: rndHidedPart,\r\n      showedPart: '',\r\n      key: key,\r\n    }\r\n    expressions.push(expression);\r\n    event.preventDefault(); //не дать выполнить действие по умолчанию - обновить страницу\r\n    if ((expression.factor1 === 0) || (expression.factor2 === 0))\r\n      alert(\"Множитель не должен быть равен 0\")\r\n    else if (isNaN(expression.factor1) || isNaN(expression.factor1))\r\n      alert(\"Множитель должен быть числом\")\r\n    else\r\n      this.setState({ expressions: expressions });\r\n  }\r\n\r\n  nextCheck_handleClick_ResBtn = () => {\r\n    this.setState({\r\n      checkKnowledgeIsEnd: false,\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    });\r\n    if (this.state.options.isMobileMode) {\r\n      this.answers = this.getRndAnswers();\r\n    } \r\n  }\r\n\r\n  // вернуться к обычному режиму\r\n  endCheck_handleClick_ResBtn = () => {\r\n    this.setState({\r\n      checkKnowledgeIsEnd: false,\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    });\r\n    this.setState(prevState => ({\r\n      options: { ...prevState.options, checkKnowledge: false }\r\n    }));\r\n    if (this.state.options.isMobileMode) {\r\n      this.answers = this.get6Answers();\r\n    } \r\n  }\r\n\r\n  tick() {\r\n    if (!this.state.checkKnowledgeIsEnd) {\r\n      if (this.state.options.checkKnowledge && this.state.seconds > 0 && !this.state.options.show) {\r\n        this.setState(\r\n          prevState => ({ seconds: prevState.seconds - 1 })\r\n        )\r\n      } else if (this.state.seconds === 0) {\r\n        this.setState({\r\n          checkKnowledgeIsEnd: true,\r\n        });\r\n        this.changeMainFactor_handleChange(); // получить новый основной множитель\r\n        // ?! показать статистику\r\n        // alert('проверка окончена');       \r\n      }\r\n    }\r\n  }\r\n\r\n  checkMobAnswer_handleClick = answer => {\r\n    const rightAnswer = this.getRightAnswer();\r\n    if (this.state.options.checkKnowledge) {\r\n      console.log('right?', (answer === rightAnswer));\r\n      if (answer === rightAnswer) {\r\n        this.delCurExpression_handleClick();\r\n        this.setState(prevState => ({\r\n          seconds: prevState.seconds + 5,\r\n          userInput: '',\r\n          rightAnswerCount: prevState.rightAnswerCount + 1,\r\n        }));\r\n      } else {\r\n        this.delCurExpression_handleClick();\r\n        this.setState(prevState => ({\r\n          errorsCount: prevState.errorsCount + 1,\r\n          userInput: '',\r\n        }));\r\n      }\r\n    } else {\r\n      if (rightAnswer === answer) {\r\n        this.setState({ receivedRightAnswer: true });\r\n        this.showHideAnswer_handleClick();\r\n        setTimeout(() => {\r\n          this.delCurExpression_handleClick();\r\n          this.setState({ receivedRightAnswer: false });\r\n        }, 3000);\r\n      }\r\n    }\r\n  }\r\n\r\n  changeMainFactor_handleClick_mobile = selectedMainFactor => {\r\n    this.getSetNewMainFactor(selectedMainFactor);\r\n  }\r\n\r\n  showHide_MobileMainFactorPanel_handleClick = () => {\r\n    this.setState( prevState => ({\r\n      isShowMMFPanel: !prevState.isShowMMFPanel,\r\n    }))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick.bind(this), 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    // if (this.answers.length === 0) {\r\n    //   this.answers = this.getRndAnswers();\r\n    // }\r\n    const timer = <span>{this.state.seconds}</span>\r\n    const options =\r\n      <>\r\n        <button className={styles.btn} onClick={this.showHideOptions_handleClick}>Настройки</button>\r\n        {this.state.options.show ?\r\n          <BackgroundScene>\r\n            <Options\r\n              options={this.state.options}\r\n              missEnter_handler={this.missEnter_handleChange_optRBtn}\r\n              checkKnowledge_handler={this.checkKnowledge_handleChange_optRBtn}\r\n              showAddFunc={this.showHideAddFunc_handleClick}\r\n            />\r\n            <button className={styles.closeBtn} onClick={this.showHideOptions_handleClick}>Закрыть</button>\r\n          </BackgroundScene> : null}\r\n      </>\r\n    let addFucn = this.state.options.showAddFunc ? (\r\n      <>\r\n        <button onClick={this.nextEpression_handleClick}>Другое выражение</button>\r\n        <AddExression\r\n          factor1={this.state.tempFactor1}\r\n          factor2={this.state.tempFactor2}\r\n          addExp={this.addExpression_handleSubmit.bind(this)}\r\n          changeFactor={this.changeTempFactorX_handleChange.bind(this)}\r\n        />\r\n        <button onClick={this.delCurExpression_handleClick}>Удалить текущее выражение</button>\r\n        <button onClick={this.showHideAnswer_handleClick} >Показать/скрыть ответ</button>\r\n        <AllExpressions\r\n          showedAll={this.state.options.showedAllExpressions}\r\n          expressions={this.state.expressions}\r\n          showHide={this.showHideExpressions_handleClick} />\r\n      </>\r\n    ) : null;\r\n    const resultsOfChecking =\r\n      <>\r\n        {this.state.checkKnowledgeIsEnd ?\r\n          <BackgroundScene>\r\n            <ResultOfChecking\r\n              errorsCount={this.state.errorsCount}\r\n              rightAnswerCount={this.state.rightAnswerCount}\r\n\r\n              curMainFactor={this.state.mainFactor}\r\n              changeMainFactor={this.changeMainFactor_handleChange}\r\n              nextCheck={this.nextCheck_handleClick_ResBtn}\r\n              endCheck={this.endCheck_handleClick_ResBtn}\r\n            /> \r\n          </BackgroundScene>\r\n        : null}\r\n      </>\r\n    const mainFactor =\r\n      <>\r\n        <label style={{marginRight: \"0.2rem\"}}>Основной множитель</label>\r\n        {this.state.isShowMMFPanel ?\r\n            <MobMainFactors \r\n              mainFactors={this.mainFactors}\r\n              changeMainFactor={this.changeMainFactor_handleClick_mobile}\r\n            /> : null}\r\n        {this.state.options.isMobileMode ?\r\n          <MobileSigns\r\n            chars={this.state.mainFactor}\r\n            showMMFPane={() => this.setState({ isShowMMFPanel: true })}\r\n          /> :\r\n          <input\r\n            value={this.state.mainFactor}\r\n            onChange={this.changeMainFactor_handleChange}\r\n            type=\"number\"\r\n          ></input>}\r\n      </>\r\n    const sessionStatus =\r\n      <>\r\n        <div className={styles.sessionStatus}>\r\n          <span>Выражений: {this.state.expressions.length}</span>\r\n          <span>Основных множителей: {this.mainFactors.length + 1}</span>\r\n        </div>\r\n      </>\r\n    return (\r\n        <div className={styles.app} //AppDiv !\r\n          ref={appRef => { this.appRef = appRef }}\r\n          onKeyDown={this.nextExpr_handleKeyDown_AppDiv} // верный ответ принимается по нажатию клавиши\r\n          tabIndex=\"0\"\r\n        >\r\n        {resultsOfChecking}\r\n        {/* header */}\r\n        <header className={styles.center}>\r\n          <Timer\r\n            checkKnowledge={this.state.options.checkKnowledge}\r\n            timer={timer}\r\n          />\r\n          {options}\r\n          {mainFactor}\r\n        </header>\r\n        {/* board */}\r\n        <section className={styles.center}>\r\n            <Expression\r\n              answers={this.state.rndAnswers}\r\n              expressions={this.state.expressions}\r\n              expCurNum={this.state.expCurNum}\r\n              mainFactor={this.state.mainFactor}\r\n              userInput={this.state.userInput}\r\n              receivedRightAnswer={this.state.receivedRightAnswer}\r\n              checkAnswer={this.checkAnswer_handleKeyUp_input}\r\n              changeAnswer={this.changeAnswer_handleChange}\r\n              checkKnowledgeIsEnd={this.state.checkKnowledgeIsEnd}\r\n              checkKnowledge={this.state.options.checkKnowledge}\r\n              seconds={this.state.seconds}\r\n              isMobileMode={this.state.options.isMobileMode}\r\n              checkMobAnswer={this.checkMobAnswer_handleClick}\r\n            />\r\n        </section>\r\n\r\n        {/* footer */}\r\n        <footer>\r\n          {sessionStatus}\r\n          {/* дополнительный функционал */}\r\n          {addFucn}\r\n        </footer>\r\n        {/* journal */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  delCurExpression_handleClick = () => {\r\n    let expNextNum = -1;\r\n    if (this.state.expressions.length > 1) {\r\n      const expressions = [...this.state.expressions];\r\n      expressions.splice(this.state.expCurNum, 1);\r\n      expNextNum = Math.floor(Math.random() * expressions.length);\r\n      this.setState({\r\n        expressions: expressions,\r\n        expCurNum: expNextNum,\r\n        rndAnswers: this.get6Answers(expNextNum, this.state.mainFactor, expressions)\r\n      });\r\n    } else if (this.mainFactors.length > 0 && !this.state.options.checkKnowledge) {\r\n      const mainFactor = this.mainFactors.splice(0, 1)[0];\r\n      const expressions = this.getExps(mainFactor);\r\n      expNextNum = Math.floor(Math.random() * expressions.length);\r\n      this.setState({\r\n        mainFactor: mainFactor,\r\n        expressions: expressions,\r\n        expCurNum: expNextNum,\r\n        rndAnswers: this.get6Answers(expNextNum, mainFactor, expressions)\r\n      });\r\n    } else if (this.state.options.checkKnowledge) {\r\n      this.setState({ checkKnowledgeIsEnd: true })\r\n      this.changeMainFactor_handleChange(); // получить новый основной множитель\r\n    }\r\n  }\r\n\r\n  // измениние состояния - в текущем выражении убрать скрытый элемент, \r\n  // сохранив информацию о нём\r\n  showHideAnswer_handleClick = () => {\r\n    const index = this.state.expCurNum;\r\n    const expressions = [...this.state.expressions];\r\n    if (expressions[index].hidedPart !== 'nothing') {\r\n      expressions[index].showedPart = expressions[index].hidedPart;\r\n      expressions[index].hidedPart = 'nothing';\r\n    } else {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = \"\";\r\n    }\r\n    this.setState({ expressions: expressions });\r\n  }\r\n\r\n  nextEpression_handleClick = () => {\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    if (expressions[index].showedPart !== '') {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = '';\r\n    }\r\n    const nextExpNum = Math.floor(Math.random() * (expressions.length));\r\n    this.setState({\r\n      userInput: '',\r\n      expressions: expressions,\r\n      expCurNum: nextExpNum,\r\n      rndAnswers: this.get6Answers(nextExpNum, this.state.mainFactor, expressions)\r\n    });\r\n  }\r\n\r\n  // изменение ответа\r\n  changeAnswer_handleChange = event => this.setState({ userInput: event.target.value });\r\n\r\n  getRightAnswer() {\r\n    let rightAnswer = 0;\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    const expression = expressions[index];\r\n    switch (expression.hidedPart) {\r\n      case 'factor1':\r\n        rightAnswer = expression.factor1;\r\n        break;\r\n      case 'factor2':\r\n        rightAnswer = expression.factor2;\r\n        break;\r\n      case 'result':\r\n        rightAnswer = expression.factor1 * expression.factor2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return rightAnswer;\r\n  }\r\n\r\n    // проверка ответа\r\n  checkAnswer_handleKeyUp_input = event => {\r\n    const rightAnswer = this.getRightAnswer();\r\n    if (this.state.options.checkKnowledge) { // режим проверки знаний\r\n      if (event.key === \"Enter\"\r\n        && parseInt(this.state.userInput) === parseInt(rightAnswer)  // получен верный ответ\r\n        && !this.state.checkKnowledgeIsEnd) {\r\n        this.delCurExpression_handleClick();\r\n        this.setState(prevState => ({\r\n          seconds: prevState.seconds + 5,\r\n          userInput: '',\r\n          rightAnswerCount: prevState.rightAnswerCount + 1,\r\n        }));\r\n        //  console.log('Режим проверки: ответ верный ', event.target.value);\r\n      } else if (event.key === \"Enter\" && !this.state.checkKnowledgeIsEnd) {\r\n        // ответ неправильный и нажата клавиша ввод\r\n        this.delCurExpression_handleClick();\r\n        this.setState(prevState => ({\r\n          errorsCount: prevState.errorsCount + 1,\r\n          userInput: '',\r\n        }));\r\n        // ? уменьшить очки\r\n\r\n        // ? сохранить ошибку для работы над ошибками\r\n      }\r\n    } else if (parseInt(event.target.value) === parseInt(rightAnswer)) { // правильный ответ получен\r\n      this.showNextEpr();\r\n    }\r\n  }\r\n\r\n  showNextEpr() {\r\n    // ответ верный: \r\n    // сбросить текущее значение ввод\r\n    this.setState({ userInput: '' })\r\n\r\n    // показать ответ, \r\n    // убрать поле ввода, \r\n    this.showHideAnswer_handleClick();\r\n\r\n    // отметить факт получения верного ответа\r\n    this.setState({ receivedRightAnswer: true })\r\n\r\n    // удалить данное выражение, но не сразу!\r\n    if (this.state.options.missEnter) {\r\n      setTimeout(() => {\r\n        this.delCurExpression_handleClick();\r\n        this.setState({ receivedRightAnswer: false });\r\n      }, 3000);\r\n    }\r\n    this.appRef.focus();\r\n  }\r\n\r\n  // для режима без паузы\r\n  nextExpr_handleKeyDown_AppDiv = event => {\r\n    if ((event.key === \"Enter\") && (this.state.receivedRightAnswer) && (!this.state.options.missEnter) && !this.state.options.checkKnowledge) {\r\n      this.delCurExpression_handleClick();\r\n      this.setState({ receivedRightAnswer: false })\r\n    }\r\n  }\r\n\r\n  missEnter_handleChange_optRBtn = e => {\r\n    const choice = e.target.value;\r\n    this.setState(prevState => ({\r\n      options: { ...prevState.options, missEnter: choice === \"miss Enter\" }\r\n    }));\r\n    if (this.state.options.isMobileMode) {\r\n      this.answers = this.getRndAnswers();\r\n    } \r\n  }\r\n\r\n  checkKnowledge_handleChange_optRBtn = e => {\r\n    const choice = e.target.value;\r\n    this.setState(prevState => ({\r\n      options: { ...prevState.options, checkKnowledge: choice === \"start checking\" }\r\n    }))\r\n    this.changeMainFactor_handleChange();\r\n    this.setState({\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    })\r\n  }\r\n\r\n  toggleOption = prop => {\r\n    this.setState(prevState => {\r\n      const options = prevState.options;\r\n      options[prop] = !options[prop];\r\n      return {\r\n        options: options,\r\n      }\r\n    });\r\n    if (this.state.options.isMobileMode) {\r\n      this.setState({\r\n        rndAnswers: this.get6Answers(this.state.expCurNum, this.state.mainFactor, this.state.expressions),\r\n      });\r\n    } \r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}