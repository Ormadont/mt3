{"version":3,"sources":["Options/Options.module.css","App/App.module.css","AddExression/AddExression.module.css","Expression/Signs/Signs.module.css","Expression/Expression.module.css","Options/Options.js","Expression/Signs/Signs.js","Expression/Expression.js","AllExpressions/AllExpressions.js","AddExression/AddExression.js","stuff/modules.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","missEnter","btn","header","option","closeBtn","optBtn","back","app","center","factorInput","addExp","sign","answerInput","userAnsweredRight","rightExpression","smallBigSmall","options","props","stateOptions","react_default","a","createElement","Fragment","className","styles","onClick","showHide","show","type","name","id","value","onChange","changeRadioButton","checked","htmlFor","showAddFunc","Signs","s","chars","autoFocus","maxLength","checkAnswer","userInput","style","verticalAlign","expression","exps","Object","toConsumableArray","expressions","i","expCurNum","factor1","Expression_Signs_Signs","factor2","result","hidedPart","receivedRightAnswer","allExpressions","exprs","showedAll","map","exp","index","Expression","key","addExression","autoComplete","onSubmit","min","max","changeFactor","getExprs","mainFactor","leftLimit","rightLimit","length","arr","secondaryFactors","getFactors","factorX","mainFactorIsFirst","Math","random","splice","floor","concat","push","showedPart","border","addin","factors","temp","includes","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mainFactors","showAddFunc_handleClick","state","setState","appDiv","setAppDiv","element","focusAppDiv","focus","showHideExpressions_handleClick","doesShow","showedAllExpressions","showHideOptions_handleClick","changeMainFactor_handleChange","event","newMainFactor","target","changeTempFactorX_handleChange","tempFactor1","tempFactor2","addExpression_handleSubmit","rndHidedPart","toString","parseInt","preventDefault","alert","isNaN","delCurExpression_handleClick","showHideAnswer_handleClick","nextEpression_handleClick","checkAnswer_handleChange","rightAnswer","setTimeout","rightAnswerHandler_enterPress","missEnterOptionsRadioButton_handleChange","e","objectSpread","scores","addFucn","AddExression","bind","AllExpressions","ref","onKeyDown","tabIndex","Options","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4dba647.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"missEnter\":\"Options_missEnter__1nxwM\",\"btn\":\"Options_btn__1iqTU\",\"header\":\"Options_header__2Qldx\",\"option\":\"Options_option__2UTw8\",\"closeBtn\":\"Options_closeBtn__3Znc0\",\"optBtn\":\"Options_optBtn__1FhXH\",\"back\":\"Options_back__f1rPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__th-hl\",\"center\":\"App_center__3FCQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"factorInput\":\"AddExression_factorInput__2RZHd\",\"addExp\":\"AddExression_addExp__11YrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"Signs_sign__3zf5U\",\"answerInput\":\"Signs_answerInput__258kk\",\"userAnsweredRight\":\"Signs_userAnsweredRight__SLjrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightExpression\":\"Expression_rightExpression__3H7JL\",\"smallBigSmall\":\"Expression_smallBigSmall__2KNo0\"};","import React from 'react';\r\nimport styles from './Options.module.css';\r\n\r\nconst options = props => {\r\n    const stateOptions = props.options;\r\n\r\n    return (\r\n        <>\r\n            <button className={styles.btn} onClick={props.showHide}>Настройки</button>\r\n            {\r\n                stateOptions.show ?\r\n                    <section className={styles.back}>\r\n                        <div className={styles.header}>\r\n                            <h4>Настройки</h4>\r\n                        </div>\r\n                        <div className={styles.option}>\r\n                            <span>\r\n                                <input\r\n                                    className={styles.missEnter}\r\n                                    type=\"radio\"\r\n                                    name=\"missEnter\"\r\n                                    id=\"cb1\"\r\n                                    value=\"miss Enter\"\r\n                                    onChange={props.changeRadioButton}\r\n                                    checked={stateOptions.missEnter} />\r\n                                <label htmlFor=\"missEnter\">ответ c паузой</label>\r\n                            </span>\r\n                            <span>\r\n                                <input\r\n                                    className={styles.missEnter}\r\n                                    type=\"radio\"\r\n                                    name=\"missEnter\"\r\n                                    id=\"cb2\"\r\n                                    value=\"do not miss Enter\"\r\n                                    onChange={props.changeRadioButton}\r\n                                    checked={!stateOptions.missEnter} />\r\n                                <label htmlFor=\"missEnter\">ответ c клавишей Ввод</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className={styles.option}>\r\n                            <button className={styles.optBtn} onClick={props.showAddFunc}>Показать/скрыть дополнительный функционал</button>\r\n                        </div>\r\n                        <button className={styles.closeBtn} onClick={props.showHide}>Закрыть</button>\r\n                    </section> : null\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default options;","import React from 'react';\r\nimport styles from './Signs.module.css'\r\n\r\nconst Signs = (props) => {\r\n  let s = props.chars;\r\n  if (!s) \r\n  {\r\n    s =\r\n    <input \r\n      autoFocus\r\n      type=\"text\"\r\n      name=\"answer\"\r\n      maxLength={2}\r\n      className={styles.answerInput}\r\n      onChange={props.checkAnswer}\r\n      value={props.userInput}\r\n      id=\"\" />\r\n  } \r\n  let style = null;\r\n  switch (props.chars) {\r\n    case '*':\r\n      style = {verticalAlign: \"-15%\"}\r\n      break;\r\n    case '=':\r\n      style = {verticalAlign: \"10%\"}\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // height: 110%;\r\n  // padding-top: 0.2em;\r\n  // max-height: 0.9em;\r\n\r\n  return (\r\n    <span className={styles.sign} style={style}>\r\n      {s}\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Signs;","import React from 'react';\r\nimport Signs from './Signs/Signs';\r\nimport styles from './Expression.module.css';\r\n\r\nconst expression = props => {\r\n    const exps = [...props.expressions];\r\n    const i = props.expCurNum;\r\n    // console.log(`Expression.js props=`, props);\r\n    let factor1 = <Signs chars={exps[i].factor1} />;\r\n    let factor2 = <Signs chars={exps[i].factor2} />\r\n    let result = <Signs chars={exps[i].factor1 * exps[i].factor2} />\r\n\r\n    switch (exps[i].hidedPart) {\r\n        case 'factor1':\r\n            factor1 =\r\n                <Signs chars=''\r\n                    checkAnswer={props.checkAnswer}\r\n                    userInput={props.userInput}/>\r\n            break;\r\n        case 'factor2':\r\n            factor2 =\r\n                <Signs chars=''\r\n                    checkAnswer={props.checkAnswer}\r\n                    userInput={props.userInput}/>\r\n            break;\r\n        case 'result':\r\n            result =\r\n                <Signs chars=''\r\n                    checkAnswer={props.checkAnswer}\r\n                    userInput={props.userInput} />\r\n            break;\r\n        default:\r\n\r\n            break;\r\n    }\r\n    let style = props.receivedRightAnswer ? styles.rightExpression : null;\r\n    return (\r\n        <div className={style}>\r\n            {factor1}\r\n            <Signs chars='*' />\r\n            {factor2}\r\n            <Signs chars='=' />\r\n            {result}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default expression;","import React from 'react';\r\nimport Expression from '../Expression/Expression';\r\n\r\nconst allExpressions = props => {\r\n    let exprs = null;\r\n    if (props.showedAll) {\r\n      exprs = props.expressions.map( (exp,index) => \r\n        <Expression\r\n          expressions={props.expressions}\r\n          expCurNum={index}\r\n          key={exp.key} />\r\n      )\r\n    }\r\n    return (\r\n        <>\r\n          <button onClick={props.showHide}>Показать все выражения</button>\r\n          {exprs}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default allExpressions;","import React from 'react';\r\nimport styles from './AddExression.module.css';\r\n\r\nconst addExression = props => {\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={props.addExp}>\r\n            <span>Первый множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor1\"\r\n                value={props.factor1}\r\n                onChange={props.changeFactor} /><br />\r\n            <span>Второй множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor2\"\r\n                value={props.factor2}\r\n                onChange={props.changeFactor} /><br />\r\n            <input\r\n                className={styles.addExp}\r\n                type=\"submit\"\r\n                value=\"Добавить выражение\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default addExression;","// Генерация массива выражений для состояния App в конструкторе при первом запуске \r\n// и далее каждый раз при выборе нового основного множителя.\r\n// Подразумевается генерация номера текущего выражения будет в конструкторе \r\n// или позже, но перед функцией render().\r\n// На вход три аргумента: первый - основной множитель, второй и третий - \r\n// границы прочих множителей\r\n// Скрытая часть выражения при генерации определяется случайно\r\n// Порядок выражений определяется случайно при генерации\r\nexport const getExprs = (mainFactor, leftLimit, rightLimit) => {\r\n    const length = rightLimit - leftLimit + 1; //длина массива включая концы границ\r\n    const arr = [];\r\n    const secondaryFactors=getFactors(length, leftLimit);\r\n    // заполнение массива\r\n    for (let i = 0; i < length; i++) {\r\n        // множители, undefined\r\n        let factor1, factor2, factorX, mainFactorIsFirst;\r\n        (Math.random() < 0.5) ? mainFactorIsFirst = false : mainFactorIsFirst = true;\r\n        factorX = secondaryFactors.splice(0,1);\r\n        if (mainFactorIsFirst) {\r\n            factor1 = mainFactor;\r\n            factor2 = factorX[0];\r\n        } else {\r\n            factor1 = factorX[0];\r\n            factor2 = mainFactor;\r\n        }\r\n        // что скрывается?\r\n        let hidedPart = '';\r\n        switch (Math.floor(Math.random() * 3)) {\r\n            case 0:\r\n                hidedPart = 'factor1';\r\n                break;\r\n            case 1:\r\n                hidedPart = 'factor2';\r\n                break;\r\n            default:\r\n                hidedPart = 'result';\r\n                break;\r\n        }\r\n        // уникальный идентификатор - ключ\r\n        const key=`${i}-${Math.floor(Math.random() * 100)}`;\r\n        arr.push({factor1: factor1, factor2: factor2, hidedPart: hidedPart, showedPart: '', key:key});\r\n    }\r\n    return arr;\r\n}\r\n\r\n// массив вспомогательных множителей\r\n// аргументы: первый - правая граница (левая - 0), второй - модификатор\r\n// например, на вход - 3 и 0, на выходе [1, 0, 2]\r\n// например, на вход - 4 и 2, на выходе [3, 5, 4, 2]\r\nexport const getFactors = (border, addin) => {\r\n    let factors=[];\r\n    while (factors.length < border) {\r\n        const temp = Math.floor(Math.random() * border) + addin;\r\n        if ((factors.length === 0) || (!factors.includes(temp))) {\r\n            factors.push(temp);\r\n        } \r\n    }\r\n    // console.log(`factors=${factors}, len=${factors.length}`);\r\n    return factors;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport Options from '../Options/Options';\r\nimport Expression from '../Expression/Expression';\r\nimport AllExpressions from '../AllExpressions/AllExpressions';\r\nimport AddExression from '../AddExression/AddExression';\r\nimport {getExprs, getFactors} from '../stuff/modules';\r\n\r\nclass App extends Component {\r\n  mainFactors = []; // основные множители\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainFactor: -1,\r\n      expressions: [], \r\n      expCurNum: 0,\r\n      userInput: '',\r\n      tempFactor1: 0, tempFactor2: 0,\r\n      showedAllExpressions: false,\r\n      receivedRightAnswer: false,\r\n      scores: 0,\r\n      options: {\r\n        show: false,\r\n        missEnter: false,\r\n        showAddFunc: false,\r\n        // режим с ограничением на время ?\r\n        // скрыите только произведения (result) - простой режим ?\r\n        // другие внешние виды\r\n      }\r\n    }\r\n    this.mainFactors = getFactors(9,1);\r\n    this.state.mainFactor = this.mainFactors.splice(0,1)[0]; // текущий основной множитель\r\n    this.state.expressions = getExprs(this.state.mainFactor, 1, 9); // выражения\r\n  }\r\n\r\n  showAddFunc_handleClick = () => {\r\n    const options = this.state.options;\r\n    options.showAddFunc = !options.showAddFunc;\r\n    this.setState({\r\n      options: options,\r\n    })\r\n  }\r\n\r\n  appDiv = null;\r\n  setAppDiv = element => this.appDiv = element;\r\n  focusAppDiv = () => {\r\n    if (this.appDiv) this.appDiv.focus()\r\n  } \r\n\r\n  showHideExpressions_handleClick = () => {\r\n    const doesShow = this.state.showedAllExpressions;\r\n    this.setState({showedAllExpressions: !doesShow});\r\n  }\r\n\r\n  showHideOptions_handleClick = () => {\r\n    const options = this.state.options;\r\n    options.show = !options.show;\r\n    this.setState({\r\n      options: options,\r\n    })\r\n  }\r\n\r\n  changeMainFactor_handleChange = event => {\r\n    const newMainFactor = event.target.value;\r\n    if ((0 < newMainFactor) && (newMainFactor < 10)) {\r\n      this.setState({\r\n        userInput:'',\r\n        receivedRightAnswer: false,\r\n        mainFactor: newMainFactor,\r\n        expressions: getExprs(newMainFactor, 1, 9)\r\n      });\r\n     }\r\n  }\r\n\r\n  changeTempFactorX_handleChange = event => {\r\n    (event.target.name === 'factor1') ? this.setState({tempFactor1: event.target.value}) : this.setState({tempFactor2: event.target.value}) \r\n  }\r\n  \r\n  addExpression_handleSubmit = event => {\r\n    const expressions = [...this.state.expressions];\r\n    let rndHidedPart = '';\r\n    switch (Math.floor(Math.random()*3)) {\r\n      case 0:\r\n        rndHidedPart = 'factor1';\r\n        break;\r\n      case 1:\r\n        rndHidedPart = 'factor2';\r\n        break;\r\n      default:\r\n          rndHidedPart = 'result';\r\n        break;\r\n    }\r\n    const key = `addedManually${expressions.length.toString()}`;\r\n    const expression = {\r\n      factor1: parseInt(this.state.tempFactor1), \r\n      factor2: parseInt(this.state.tempFactor2), \r\n      hidedPart: rndHidedPart,\r\n      showedPart: '',\r\n      key: key,\r\n    }\r\n    expressions.push(expression);\r\n    event.preventDefault(); //не дать выполнить действие по умолчанию - обновить страницу\r\n    if ((expression.factor1 === 0) || (expression.factor2 === 0))\r\n      alert(\"Множитель не должен быть равен 0\")\r\n    else if (isNaN(expression.factor1) || isNaN(expression.factor1))\r\n      alert(\"Множитель должен быть числом\")\r\n    else\r\n      this.setState({ expressions: expressions });\r\n  }\r\n\r\n  render() {\r\n    let addFucn = this.state.options.showAddFunc ? (\r\n      <>\r\n        <button onClick={this.nextEpression_handleClick}>Другое выражение</button>\r\n        <AddExression\r\n          factor1={this.state.tempFactor1}\r\n          factor2={this.state.tempFactor2}\r\n          addExp={this.addExpression_handleSubmit.bind(this)}\r\n          changeFactor={this.changeTempFactorX_handleChange.bind(this)}\r\n        />\r\n        <button onClick={this.delCurExpression_handleClick}>Удалить текущее выражение</button>\r\n        <button onClick={this.showHideAnswer_handleClick} >Показать/скрыть ответ</button>\r\n        <AllExpressions\r\n          showedAll={this.state.showedAllExpressions}\r\n          expressions={this.state.expressions}\r\n          showHide={this.showHideExpressions_handleClick} />\r\n      </>     \r\n    ) : null;\r\n\r\n    return (\r\n      <div className = {styles.app}\r\n        ref = {this.setAppDiv}\r\n        onKeyDown={this.rightAnswerHandler_enterPress} // верный ответ принимается по нажатию клавиши\r\n        tabIndex=\"0\"\r\n      >\r\n        {/* header */}\r\n        <header className={styles.center}>\r\n          <label>Основной множитель</label>\r\n          <input value={this.state.mainFactor} onChange={this.changeMainFactor_handleChange} type=\"number\"></input>\r\n          <Options \r\n            options={this.state.options}\r\n            changeRadioButton = {this.missEnterOptionsRadioButton_handleChange}\r\n            showHide = {this.showHideOptions_handleClick}\r\n            showAddFunc = {this.showAddFunc_handleClick}\r\n          />\r\n        </header>\r\n        \r\n        {/* board */}\r\n        <section className = {styles.center}>\r\n          <Expression\r\n            expressions={this.state.expressions}\r\n            expCurNum={this.state.expCurNum}\r\n            userInput={this.state.userInput}\r\n            receivedRightAnswer={this.state.receivedRightAnswer}\r\n            checkAnswer={this.checkAnswer_handleChange} \r\n          />\r\n        </section>\r\n\r\n        {/* footer */}\r\n        <footer>\r\n          {/* дополнительный функционал */}\r\n          {addFucn}\r\n        </footer>\r\n       \r\n        {/* journal */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  delCurExpression_handleClick = () => {\r\n    if (this.state.expressions.length > 1) {\r\n      const expressions = [...this.state.expressions];\r\n      expressions.splice(this.state.expCurNum,1);\r\n      this.setState({expressions:expressions});\r\n      this.setState({expCurNum: Math.floor(Math.random()*(this.state.expressions.length-1))});\r\n    } else if (this.mainFactors.length>0) {\r\n      const mainFactor = this.mainFactors.splice(0,1)[0];\r\n      const expressions = getExprs(mainFactor, 1, 9);\r\n      this.setState({\r\n        mainFactor: mainFactor,\r\n        expressions: expressions,\r\n        expCurNum: Math.floor(Math.random()*(expressions.length-1)),\r\n      });\r\n    }\r\n  }\r\n  \r\n  // измениние состояния - в текущем выражении убрать скрытый элемент, \r\n  // сохранив информацию о нём\r\n  showHideAnswer_handleClick = () => {\r\n    const index = this.state.expCurNum;\r\n    const expressions = [...this.state.expressions];\r\n    if (expressions[index].hidedPart !== 'nothing') {\r\n      expressions[index].showedPart = expressions[index].hidedPart;\r\n      expressions[index].hidedPart = 'nothing';\r\n    } else  {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = \"\";\r\n    }\r\n    this.setState({expressions: expressions});\r\n  }\r\n\r\n  nextEpression_handleClick = () => {\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    if (expressions[index].showedPart !== '') {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = '';\r\n    }\r\n      this.setState({userInput:''});\r\n      this.setState({expressions: expressions});\r\n      this.setState({expCurNum: Math.floor(Math.random()*this.state.expressions.length)});\r\n  }\r\n  \r\n  checkAnswer_handleChange = event => {\r\n    \r\n    // if (event.keyCode === 13) { // нажата клавиша Enter\r\n    //     alert('Требуется проверка ответа?')\r\n    // }\r\n    let rightAnswer = 0;\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    const expression = expressions[index];\r\n    switch (expression.hidedPart) {\r\n      case 'factor1':\r\n        rightAnswer = expression.factor1;\r\n        break;\r\n      case 'factor2':\r\n        rightAnswer = expression.factor2;\r\n        break;\r\n      case 'result':\r\n        rightAnswer = expression.factor1*expression.factor2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // правильный ответ?\r\n    if (parseInt(event.target.value) === parseInt(rightAnswer)) {\r\n      // ответ верный: \r\n      // сбросить текущее значение ввод\r\n      this.setState({userInput: ''})\r\n      \r\n      // показать ответ, \r\n      // убрать поле ввода, \r\n      this.showHideAnswer_handleClick();\r\n      \r\n      // отметить факт верного выражения\r\n      this.setState({receivedRightAnswer: true})\r\n      \r\n      // удалить данное выражение, но не сразу! // условие - включено в настройках?\r\n      if (this.state.options.missEnter) {\r\n        setTimeout(() => {\r\n          this.delCurExpression_handleClick();\r\n          this.setState({ receivedRightAnswer: false })\r\n        }, 3000);\r\n      }\r\n      this.focusAppDiv();\r\n    } else {     \r\n      // верный ответ не получен, продолжаем ввод\r\n      this.setState({userInput: event.target.value})\r\n    }\r\n  }\r\n\r\n  rightAnswerHandler_enterPress = event => {\r\n    if ((event.key === \"Enter\") && (this.state.receivedRightAnswer) && (!this.state.options.missEnter)) { // добавить условие - включено в настройках?\r\n      this.delCurExpression_handleClick();\r\n      this.setState({ receivedRightAnswer: false })\r\n    }\r\n  }\r\n\r\n  missEnterOptionsRadioButton_handleChange = e => {\r\n    let options = {...this.state.options};\r\n    (e.target.value === \"miss Enter\") ? options.missEnter = true : options.missEnter = false;\r\n    this.setState({options: options});\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}