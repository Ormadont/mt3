{"version":3,"sources":["Options/Options.module.css","Expression/Expression.module.css","App/App.module.css","ResultOfChecking/ResultOfChecking.module.css","AddExression/AddExression.module.css","Expression/Signs/Signs.module.css","backgroundScene/backgroundScene.module.css","Expression/mobileSigns/MobileSigns.module.css","Timer/Timer.module.css","backgroundScene/backgroundScene.js","ResultOfChecking/ResultOfChecking.js","Options/Options.js","Expression/Signs/Signs.js","Expression/mobileSigns/MobileSigns.js","stuff/modules.js","Expression/Expression.js","AllExpressions/AllExpressions.js","AddExression/AddExression.js","Timer/Timer.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","radioBtn","header","option","optBtn","back","rightExpression","smallBigSmall","cusBorder","expression","sec_1","sec_2","sec_3","sec_4","sec_5","app","center","sessionStatus","btn","closeBtn","headerRes","infoRes","footerRes","btnRes","inputRes","factorInput","addExp","sign","answerInput","userAnsweredRight","downLeft","downRight","downCenter","default","upLeft","upRight","upCenter","timer","backgroundScene","props","react_default","a","createElement","className","styles","children","resultOfChecking","grade","allExprsCount","rightAnswerCount","errorsCount","Fragment","onClick","nextCheck","type","value","curMainFactor","onChange","changeMainFactor","endCheck","options","stateOptions","id","name","missEnter_handler","checked","missEnter","htmlFor","checkKnowledge","checkKnowledge_handler","showAddFunc","Signs","s","chars","inputRef","useRef","useEffect","checkKnowledgeIsEnd","current","focus","ref","autoFocus","maxLength","onKeyUp","checkAnswer","changeAnswer","userInput","style","verticalAlign","mobileSigns","signs","onClickFunc","checkMobAnswer","undefined","color","paddingLeft","position","getExprs","mainFactor","leftLimit","rightLimit","length","arr","secondaryFactors","getFactors","i","factorX","factor1","factor2","mainFactorIsFirst","Math","random","splice","hidedPart","floor","key","concat","push","showedPart","border","addin","factors","temp","includes","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","rightAnswer","exps","Object","toConsumableArray","expressions","expCurNum","Expression_Signs_Signs","result","isMobileMode","MobileSigns","receivedRightAnswer","seconds","answers","map","x","find","el","shift","origArray","mixUpArray","randomIndex","rand_element","mixUp","topAnswers","bottomAnswers","onlyExpression","allExpressions","exprs","showedAll","exp","index","Expression","showHide","addExression","autoComplete","onSubmit","min","max","changeFactor","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mainFactors","getExps","getExpressions","state","showHideAddFunc_handleClick","toggleOption","showHideExpressions_handleClick","showHideOptions_handleClick","changeMainFactor_handleChange","event","newMainFactor","target","setState","changeTempFactorX_handleChange","tempFactor1","tempFactor2","addExpression_handleSubmit","rndHidedPart","toString","parseInt","preventDefault","alert","isNaN","nextCheck_handleClick_ResBtn","endCheck_handleClick_ResBtn","prevState","objectSpread","checkMobAnswer_handleClick","answer","getRightAnswer","showHideAnswer_handleClick","setTimeout","delCurExpression_handleClick","expNextNum","nextEpression_handleClick","nextExpNum","changeAnswer_handleChange","checkAnswer_handleKeyUp_input","showNextEpr","nextExpr_handleKeyDown_AppDiv","missEnter_handleChange_optRBtn","e","choice","checkKnowledge_handleChange_optRBtn","prop","show","showedAllExpressions","interval","setInterval","tick","bind","clearInterval","_this2","src_backgroundScene_backgroundScene","Options","addFucn","AddExression","AllExpressions","resultsOfChecking","ResultOfChecking","appRef","onKeyDown","tabIndex","Timer","_this3","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49865f3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"Options_radioBtn__4T2Ev\",\"header\":\"Options_header__OARCX\",\"option\":\"Options_option__Mc7lD\",\"optBtn\":\"Options_optBtn__3bUd1\",\"back\":\"Options_back__2uaT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightExpression\":\"Expression_rightExpression__1p_lg\",\"smallBigSmall\":\"Expression_smallBigSmall__233zB\",\"cusBorder\":\"Expression_cusBorder__2Fl1P\",\"expression\":\"Expression_expression__10X7a\",\"sec_1\":\"Expression_sec_1__ckBc6\",\"sec_2\":\"Expression_sec_2__2WGX7\",\"sec_3\":\"Expression_sec_3__1Xqmt\",\"sec_4\":\"Expression_sec_4__w41oJ\",\"sec_5\":\"Expression_sec_5__22gNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3Xq-P\",\"center\":\"App_center__2Ewkr\",\"sessionStatus\":\"App_sessionStatus__2iDve\",\"btn\":\"App_btn__1Gbj6\",\"closeBtn\":\"App_closeBtn__17JEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRes\":\"ResultOfChecking_headerRes__2RCi0\",\"infoRes\":\"ResultOfChecking_infoRes__1YPj7\",\"footerRes\":\"ResultOfChecking_footerRes__H85BE\",\"btnRes\":\"ResultOfChecking_btnRes__18zZq\",\"inputRes\":\"ResultOfChecking_inputRes__3bI03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"factorInput\":\"AddExression_factorInput__36hPK\",\"addExp\":\"AddExression_addExp__3IKXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"Signs_sign__2Krxc\",\"answerInput\":\"Signs_answerInput__2K5j2\",\"userAnsweredRight\":\"Signs_userAnsweredRight__1Bxov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"backgroundScene_back__3PTD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downLeft\":\"MobileSigns_downLeft__3xIUN\",\"downRight\":\"MobileSigns_downRight__1lUNZ\",\"downCenter\":\"MobileSigns_downCenter__1ZHh8\",\"default\":\"MobileSigns_default__Gdcos\",\"upLeft\":\"MobileSigns_upLeft__3rctP\",\"upRight\":\"MobileSigns_upRight__2ibPn\",\"upCenter\":\"MobileSigns_upCenter__hT3--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__psFr9\"};","import React from 'react';\r\nimport styles from './backgroundScene.module.css';\r\n\r\nconst backgroundScene = props => {\r\n    return (\r\n        <div className={styles.back}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backgroundScene;","import React from 'react';\r\nimport styles from './ResultOfChecking.module.css';\r\n\r\nconst resultOfChecking = props => {\r\n\r\n  let grade = '';\r\n  const allExprsCount = props.rightAnswerCount + props.errorsCount;\r\n  switch (props.rightAnswerCount) {\r\n    case 9:\r\n      grade = 'Отлично!!!';\r\n      break;\r\n    case 8:\r\n      grade = 'Хорошо!';\r\n      break;\r\n    case 7:\r\n      grade = 'Удовлетворительно.';\r\n      break;\r\n    case 6:\r\n      grade = 'Плохо.';\r\n      break;\r\n    default:\r\n      grade = 'Ужасно!';\r\n      break;\r\n  }\r\n  return (\r\n    <>\r\n      <h3 className={styles.headerRes}>Результаты</h3>\r\n      <div className={styles.infoRes}>\r\n        <p>Выражений: {allExprsCount}</p>\r\n        <p>Ошибок: {props.errorsCount}</p>\r\n        <p>{grade}</p>\r\n      </div>\r\n      <footer className={styles.footerRes}>\r\n        <button className={styles.btnRes} onClick={props.nextCheck}> Ещё раз</button>\r\n        <input\r\n          className={styles.inputRes}\r\n          type=\"number\"\r\n          value={props.curMainFactor}\r\n          onChange={props.changeMainFactor}\r\n        />\r\n        <button className={styles.btnRes} onClick={props.endCheck}> Вернуться </button>\r\n      </footer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default resultOfChecking;","import React from 'react';\r\nimport styles from './Options.module.css';\r\n\r\nconst options = props => {\r\n  const stateOptions = props.options;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <h4>Настройки</h4>\r\n      </div>\r\n      <div id=\"missEnter\" className={styles.option}>\r\n        <p>Режим ввода с клавиатуры</p>\r\n        <span>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"missEnter\"\r\n            id=\"missEnterOn\"\r\n            value=\"miss Enter\"\r\n            onChange={props.missEnter_handler}\r\n            checked={stateOptions.missEnter} />\r\n          <label htmlFor=\"missEnterOn\">ответ c паузой</label>\r\n        </span>\r\n        <span>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"missEnter\"\r\n            id=\"doNotMissEnter\"\r\n            value=\"do not miss Enter\"\r\n            onChange={props.missEnter_handler}\r\n            checked={!stateOptions.missEnter} />\r\n          <label htmlFor=\"doNotMissEnter\">ответ c клавишей Ввод</label>\r\n        </span>\r\n      </div>\r\n      <div id=\"checkKnowledge\" className={styles.option}>\r\n        <p>Режим проверки знаний</p>\r\n        <div>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"checkKnowledge\"\r\n            id=\"checkOn\"\r\n            value=\"start checking\"\r\n            checked={stateOptions.checkKnowledge}\r\n            onChange={props.checkKnowledge_handler}\r\n          />\r\n          <label htmlFor=\"checkOn\">включить</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className={styles.radioBtn}\r\n            type=\"radio\"\r\n            name=\"checkKnowledge\"\r\n            id=\"checkOff\"\r\n            value=\"finish checking\"\r\n            checked={!stateOptions.checkKnowledge}\r\n            onChange={props.checkKnowledge_handler}\r\n          />\r\n          <label htmlFor=\"checkOff\">выключить</label>\r\n        </div>\r\n\r\n      </div>\r\n      <div id=\"showAddFunc\" className={styles.option}>\r\n        <button className={styles.optBtn} onClick={props.showAddFunc}>Показать/скрыть дополнительный функционал</button>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default options;","import React, {useRef, useEffect} from 'react';\r\nimport styles from './Signs.module.css'\r\n\r\nconst Signs = (props) => {\r\n  let s = props.chars;\r\n  const inputRef = useRef(null);\r\n  \r\n  useEffect(\r\n    () => {\r\n      if (s.type ==='input' && !props.checkKnowledgeIsEnd)  {\r\n        inputRef.current.focus()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (s===\"\") {\r\n    s =\r\n    <input \r\n      ref={inputRef}\r\n      autoFocus\r\n      type=\"text\"\r\n      name=\"answer\"\r\n      maxLength={2}\r\n      className={styles.answerInput}\r\n      onKeyUp={props.checkAnswer}\r\n      onChange={props.changeAnswer}\r\n      value={props.userInput}\r\n      id=\"\" />\r\n  } \r\n  let style = null;\r\n  switch (props.chars) {\r\n    case '*':\r\n      style = {verticalAlign: \"-15%\"}\r\n      break;\r\n    case '=':\r\n      style = {verticalAlign: \"10%\"}\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\nreturn (\r\n    <span className={styles.sign} style={style}>\r\n      {s}\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Signs;","import React from 'react';\r\nimport styles from './MobileSigns.module.css';\r\n\r\nconst mobileSigns = props => {\r\n  let signs = props.chars;\r\n  let style = {};\r\n  let onClickFunc = () => props.checkMobAnswer(props.chars);\r\n  if (props.chars === undefined) {\r\n    signs = '?';\r\n    style = {color: \"white\"};\r\n    onClickFunc = null;\r\n  } else {\r\n    style = props.chars>9 ? {\r\n      paddingLeft: 0\r\n    } : {};\r\n  }\r\n  return (\r\n    <span\r\n      style={style}\r\n      className={styles[props.position]}\r\n      onClick={onClickFunc}\r\n    >{signs}</span> \r\n  )\r\n}\r\n\r\nexport default mobileSigns;\r\n\r\n","// Генерация массива выражений для состояния App в конструкторе при первом запуске \r\n// и далее каждый раз при выборе нового основного множителя.\r\n// Подразумевается генерация номера текущего выражения будет в конструкторе \r\n// или позже, но перед функцией render().\r\n// На вход три аргумента: первый - основной множитель, второй и третий - \r\n// границы прочих множителей\r\n// Скрытая часть выражения при генерации определяется случайно\r\n// Порядок выражений определяется случайно при генерации\r\nexport const getExprs = (mainFactor, leftLimit, rightLimit) => {\r\n    const length = rightLimit - leftLimit + 1; //длина массива включая концы границ\r\n    const arr = [];\r\n    const secondaryFactors=getFactors(length, leftLimit);\r\n    // заполнение массива\r\n    for (let i = 0; i < length; i++) {\r\n        // множители, undefined\r\n        let factor1, factor2, factorX, mainFactorIsFirst;\r\n        (Math.random() < 0.5) ? mainFactorIsFirst = false : mainFactorIsFirst = true;\r\n        factorX = secondaryFactors.splice(0,1);\r\n        let hidedPart = ''; // что скрывается?\r\n        if (mainFactorIsFirst) {\r\n            factor1 = mainFactor;\r\n            factor2 = factorX[0];\r\n            if (Math.floor(Math.random() * 2) === 0) hidedPart = 'result';\r\n            else hidedPart = 'factor2';\r\n        } else {\r\n            factor1 = factorX[0];\r\n            factor2 = mainFactor;\r\n            if (Math.floor(Math.random() * 2) === 0) hidedPart = 'result';\r\n            else hidedPart = 'factor1';\r\n        }\r\n        // уникальный идентификатор - ключ\r\n        const key=`${i}-${Math.floor(Math.random() * 100)}`;\r\n        arr.push({factor1: factor1, factor2: factor2, hidedPart: hidedPart, showedPart: '', key:key});\r\n    }\r\n    return arr;\r\n}\r\n\r\n// массив вспомогательных множителей из целых чисел\r\n// аргументы: первый - правая граница (левая - 0) и количество множителей, второй - модификатор\r\n// например, на вход - 3 и 0, на выходе [1, 0, 2]\r\n// например, на вход - 4 и 2, на выходе [3, 5, 4, 2]\r\nexport const getFactors = (border, addin) => {\r\n    let factors=[];\r\n    while (factors.length < border) {\r\n        const temp = Math.floor(Math.random() * border) + addin;\r\n        if ((factors.length === 0) || (!factors.includes(temp))) {\r\n            factors.push(temp);\r\n        } \r\n    }\r\n    // console.log(`factors=${factors}, len=${factors.length}`);\r\n    return factors;\r\n}\r\n\r\n//перемешать произвольный массив\r\nexport function mixUp(origArray) {\r\n    const mixUpArray = [];\r\n    while (origArray.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * origArray.length); //рандомный индекс первого массива\r\n        const rand_element = origArray.splice(randomIndex, 1) //удалённый элемент (массив) первого массива для второго массива\r\n        mixUpArray.push(rand_element[0]); //добавляем элемент в новый массив\r\n    }\r\n    return mixUpArray;\r\n}\r\n\r\nexport var isMobile = {\r\n    Android: function() {\r\n        return navigator.userAgent.match(/Android/i);\r\n    },\r\n    BlackBerry: function() {\r\n        return navigator.userAgent.match(/BlackBerry/i);\r\n    },\r\n    iOS: function() {\r\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n    },\r\n    Opera: function() {\r\n        return navigator.userAgent.match(/Opera Mini/i);\r\n    },\r\n    Windows: function() {\r\n        return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\r\n    },\r\n    any: function() {\r\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n    }\r\n};\r\n\r\n// Used to detect whether the users browser is an mobile browser\r\nfunction isMobile_alt() {\r\n    ///<summary>Detecting whether the browser is a mobile browser or desktop browser</summary>\r\n    ///<returns>A boolean value indicating whether the browser is a mobile browser or not</returns>\r\n\r\n    if (sessionStorage.desktop) // desktop storage \r\n        return false;\r\n    else if (localStorage.mobile) // mobile storage\r\n        return true;\r\n\r\n    // alternative\r\n    var mobile = ['iphone','ipad','android','blackberry','nokia','opera mini','windows mobile','windows phone','iemobile']; \r\n    for (var i in mobile) if (navigator.userAgent.toLowerCase().indexOf(mobile[i].toLowerCase()) > 0) return true;\r\n\r\n    // nothing found.. assume desktop\r\n    return false;\r\n}","import React from 'react';\r\nimport Signs from './Signs/Signs';\r\nimport styles from './Expression.module.css';\r\nimport MobileSigns from './mobileSigns/MobileSigns';\r\nimport {getFactors, mixUp} from '../stuff/modules';\r\n// import MobileAnswers from './MobileAnswers/MobileAnswers';\r\n\r\nconst expression = props => {\r\n    const exps = [...props.expressions];\r\n    const i = props.expCurNum;\r\n    let factor1 = <Signs chars={exps[i].factor1} />;\r\n    let factor2 = <Signs chars={exps[i].factor2} />\r\n    let result = <Signs chars={exps[i].factor1 * exps[i].factor2} />\r\n    const signs = props.isMobileMode ?\r\n        <MobileSigns position='default' /> :\r\n        <Signs chars=''\r\n            checkAnswer={props.checkAnswer}\r\n            changeAnswer={props.changeAnswer}\r\n            userInput={props.userInput}\r\n            checkKnowledgeIsEnd={props.checkKnowledgeIsEnd}\r\n        />;\r\n    let rightAnswer;\r\n    switch (exps[i].hidedPart) {\r\n        case 'factor1':\r\n            rightAnswer=exps[i].factor1;\r\n            factor1 = signs;\r\n            break;\r\n        case 'factor2':\r\n            rightAnswer=exps[i].factor2;\r\n            factor2 = signs;\r\n            break;\r\n        case 'result':\r\n            rightAnswer=exps[i].factor1 * exps[i].factor2;\r\n            result = signs;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    let style = props.receivedRightAnswer ? styles.rightExpression : '';\r\n    if (props.checkKnowledge) { // режим проверки\r\n        style += styles.cusBorder + ' ';\r\n        switch (props.seconds) {\r\n            case 9:\r\n            case 8:\r\n                style += styles.sec_5 + ' ';\r\n                break;\r\n            case 7:\r\n            case 6:\r\n                style += styles.sec_4 + ' ';\r\n                break;\r\n            case 5:\r\n            case 4:\r\n                style += styles.sec_3 + ' ';\r\n                break;\r\n            case 3:\r\n            case 2:\r\n                style += styles.sec_2 + ' ';\r\n                break;\r\n            case 1:\r\n            case 0:\r\n                style += styles.sec_1 + ' ';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // const variantsCount = 6; // количество вариантов ответа\r\n    const mainFactor=props.mainFactor;\r\n    let answers = getFactors(6,1).map(x=>x*mainFactor);\r\n    // Если набор ответов не содержит правильного ответа, \r\n    // то убрать один ответ, добавить правильный и перемешать.\r\n    if (!answers.find(el=>el===rightAnswer)) { \r\n      answers.shift();\r\n      answers.push(rightAnswer);\r\n      answers = mixUp(answers);\r\n    }\r\n\r\n    const topAnswers = props.isMobileMode && !props.receivedRightAnswer ? (<>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"upLeft\" chars={answers[0]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"upCenter\" chars={answers[1]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"upRight\" chars={answers[2]}/>\r\n    </>): null;\r\n    const bottomAnswers = props.isMobileMode && !props.receivedRightAnswer ? (<>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"downLeft\" chars={answers[3]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"downCenter\" chars={answers[4]}/>\r\n        <MobileSigns checkMobAnswer={props.checkMobAnswer} position=\"downRight\" chars={answers[5]}/>\r\n    </>): null;\r\n    const onlyExpression = (<>\r\n            {factor1}\r\n            <Signs chars='*' />\r\n            {factor2}\r\n            <Signs chars='=' />\r\n            {result}\r\n    </>);\r\n    return (\r\n        <div className={style + ' ' + styles.expression}>\r\n            {topAnswers}\r\n            {onlyExpression}\r\n            {bottomAnswers}\r\n        </div>)\r\n}\r\n\r\nexport default expression;","import React from 'react';\r\nimport Expression from '../Expression/Expression';\r\n\r\nconst allExpressions = props => {\r\n    let exprs = null;\r\n    if (props.showedAll) {\r\n      exprs = props.expressions.map( (exp,index) => \r\n        <Expression\r\n          expressions={props.expressions}\r\n          expCurNum={index}\r\n          key={exp.key} />\r\n      )\r\n    }\r\n    return (\r\n        <>\r\n          <button onClick={props.showHide}>Показать все выражения</button>\r\n          {exprs}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default allExpressions;","import React from 'react';\r\nimport styles from './AddExression.module.css';\r\n\r\nconst addExression = props => {\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={props.addExp}>\r\n            <span>Первый множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor1\"\r\n                value={props.factor1}\r\n                onChange={props.changeFactor} /><br />\r\n            <span>Второй множитель</span>\r\n            <input\r\n                className={styles.factorInput}\r\n                type=\"number\" min=\"1\" max=\"9\"\r\n                name=\"factor2\"\r\n                value={props.factor2}\r\n                onChange={props.changeFactor} /><br />\r\n            <input\r\n                className={styles.addExp}\r\n                type=\"submit\"\r\n                value=\"Добавить выражение\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default addExression;","import React from 'react';\r\nimport styles from './Timer.module.css'\r\n\r\nconst timer = props => {\r\n    return <div className = {styles.timer}>\r\n        { props.checkKnowledge ? props.timer : null }\r\n    </div>\r\n}\r\n\r\nexport default timer;","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport BackgroundScene from '../backgroundScene/backgroundScene';\r\nimport ResultOfChecking from '../ResultOfChecking/ResultOfChecking';\r\nimport Options from '../Options/Options';\r\nimport Expression from '../Expression/Expression';\r\nimport AllExpressions from '../AllExpressions/AllExpressions';\r\nimport AddExression from '../AddExression/AddExression';\r\nimport Timer from '../Timer/Timer';\r\nimport { getExprs as getExpressions, getFactors, isMobile } from '../stuff/modules';\r\n\r\nclass App extends Component {\r\n  mainFactors = []; // основные множители\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainFactor: -1,\r\n      expressions: [],\r\n      expCurNum: 0,\r\n      userInput: '',\r\n      tempFactor1: 0, tempFactor2: 0,\r\n      receivedRightAnswer: false,\r\n      seconds: 10, // время в режиме проверки знанний\r\n      checkKnowledgeIsEnd: false,\r\n      rightAnswerCount: 0,\r\n      errorsCount: 0,\r\n      options: {\r\n        show: false,\r\n        isMobileMode: true,\r\n        showedAllExpressions: false,\r\n        missEnter: false,\r\n        checkKnowledge: false, // режим проверки знаний\r\n        showAddFunc: false,\r\n        leftLimit: 1,\r\n        rightLimit: 9,\r\n        // другие внешние виды\r\n      }\r\n    }\r\n    this.mainFactors = getFactors(9, 1);\r\n    this.state.mainFactor = this.mainFactors.splice(0, 1)[0]; // текущий основной множитель\r\n    this.state.expressions = getExpressions(this.state.mainFactor, this.state.options.leftLimit, this.state.options.rightLimit); // выражения\r\n    this.state.options.isMobileMode = isMobile.any() === null ? false : true;\r\n  }\r\n\r\n  // Получить новые выражения\r\n  getExps = mainFactor => getExpressions(mainFactor, this.state.options.leftLimit, this.state.options.rightLimit);\r\n\r\n  showHideAddFunc_handleClick = () => this.toggleOption(\"showAddFunc\");\r\n  showHideExpressions_handleClick = () => this.toggleOption(\"showedAllExpressions\");\r\n  showHideOptions_handleClick = () => this.toggleOption(\"show\");\r\n\r\n  changeMainFactor_handleChange = event => {\r\n    let newMainFactor;\r\n    if (event === undefined) {\r\n      newMainFactor = Math.floor(Math.random() * 9) + 1;\r\n    } else {\r\n      newMainFactor = event.target.value;\r\n    }\r\n    const expressions = this.getExps(newMainFactor);\r\n    if ((0 < newMainFactor) && (newMainFactor < 10)) {\r\n      this.setState({\r\n        userInput: '',\r\n        receivedRightAnswer: false,\r\n        mainFactor: newMainFactor,\r\n        expressions: expressions,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeTempFactorX_handleChange = event => {\r\n    (event.target.name === 'factor1') ? this.setState({ tempFactor1: event.target.value }) : this.setState({ tempFactor2: event.target.value })\r\n  }\r\n\r\n  addExpression_handleSubmit = event => {\r\n    const expressions = [...this.state.expressions];\r\n    let rndHidedPart = '';\r\n    switch (Math.floor(Math.random() * 3)) {\r\n      case 0:\r\n        rndHidedPart = 'factor1';\r\n        break;\r\n      case 1:\r\n        rndHidedPart = 'factor2';\r\n        break;\r\n      default:\r\n        rndHidedPart = 'result';\r\n        break;\r\n    }\r\n    const key = `addedManually${expressions.length.toString()}`;\r\n    const expression = {\r\n      factor1: parseInt(this.state.tempFactor1),\r\n      factor2: parseInt(this.state.tempFactor2),\r\n      hidedPart: rndHidedPart,\r\n      showedPart: '',\r\n      key: key,\r\n    }\r\n    expressions.push(expression);\r\n    event.preventDefault(); //не дать выполнить действие по умолчанию - обновить страницу\r\n    if ((expression.factor1 === 0) || (expression.factor2 === 0))\r\n      alert(\"Множитель не должен быть равен 0\")\r\n    else if (isNaN(expression.factor1) || isNaN(expression.factor1))\r\n      alert(\"Множитель должен быть числом\")\r\n    else\r\n      this.setState({ expressions: expressions });\r\n  }\r\n\r\n  nextCheck_handleClick_ResBtn = () => {\r\n    this.setState({\r\n      checkKnowledgeIsEnd: false,\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    });\r\n  }\r\n\r\n  // вернуться к обычному режиму\r\n  endCheck_handleClick_ResBtn = () => {\r\n    this.setState({\r\n      checkKnowledgeIsEnd: false,\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    });\r\n    this.setState(prevState => ({\r\n      options: { ...prevState.options, checkKnowledge: false }\r\n    }));\r\n  }\r\n\r\n  tick() {\r\n    if (!this.state.checkKnowledgeIsEnd) {\r\n      if (this.state.options.checkKnowledge && this.state.seconds > 0 && !this.state.options.show) {\r\n        this.setState(\r\n          prevState => ({ seconds: prevState.seconds - 1 })\r\n        )\r\n      } else if (this.state.seconds === 0) {\r\n        this.setState({\r\n          checkKnowledgeIsEnd: true,\r\n        });\r\n        this.changeMainFactor_handleChange(); // получить новый основной множитель\r\n        // ?! показать статистику\r\n        // alert('проверка окончена');       \r\n      }\r\n    }\r\n  }\r\n\r\n  checkMobAnswer_handleClick = answer => {\r\n    const rightAnswer = this.getRightAnswer();\r\n    // console.log(this.state);\r\n    // console.log(answer);\r\n    \r\n    if (rightAnswer === answer) {  \r\n      // console.log(\"answer right\");  \r\n    \r\n    this.setState({ receivedRightAnswer: true });\r\n\r\n    this.showHideAnswer_handleClick();\r\n\r\n    setTimeout(() => {\r\n      this.delCurExpression_handleClick();\r\n      this.setState({ receivedRightAnswer: false });\r\n    }, 3000);\r\n      \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.tick.bind(this), 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const timer = <span>{this.state.seconds}</span>\r\n    const options =\r\n      <>\r\n        <button className={styles.btn} onClick={this.showHideOptions_handleClick}>Настройки</button>\r\n        {this.state.options.show ?\r\n          <BackgroundScene>\r\n            <Options\r\n              options={this.state.options}\r\n              missEnter_handler={this.missEnter_handleChange_optRBtn}\r\n              checkKnowledge_handler={this.checkKnowledge_handleChange_optRBtn}\r\n              showAddFunc={this.showHideAddFunc_handleClick}\r\n            />\r\n            <button className={styles.closeBtn} onClick={this.showHideOptions_handleClick}>Закрыть</button>\r\n          </BackgroundScene> : null}\r\n      </>\r\n    let addFucn = this.state.options.showAddFunc ? (\r\n      <>\r\n        <button onClick={this.nextEpression_handleClick}>Другое выражение</button>\r\n        <AddExression\r\n          factor1={this.state.tempFactor1}\r\n          factor2={this.state.tempFactor2}\r\n          addExp={this.addExpression_handleSubmit.bind(this)}\r\n          changeFactor={this.changeTempFactorX_handleChange.bind(this)}\r\n        />\r\n        <button onClick={this.delCurExpression_handleClick}>Удалить текущее выражение</button>\r\n        <button onClick={this.showHideAnswer_handleClick} >Показать/скрыть ответ</button>\r\n        <AllExpressions\r\n          showedAll={this.state.options.showedAllExpressions}\r\n          expressions={this.state.expressions}\r\n          showHide={this.showHideExpressions_handleClick} />\r\n      </>\r\n    ) : null;\r\n    const resultsOfChecking =\r\n      <>\r\n        {this.state.checkKnowledgeIsEnd ?\r\n          <BackgroundScene>\r\n            <ResultOfChecking\r\n              errorsCount={this.state.errorsCount}\r\n              rightAnswerCount={this.state.rightAnswerCount}\r\n\r\n              curMainFactor={this.state.mainFactor}\r\n              changeMainFactor={this.changeMainFactor_handleChange}\r\n              nextCheck={this.nextCheck_handleClick_ResBtn}\r\n              endCheck={this.endCheck_handleClick_ResBtn}\r\n            /> \r\n          </BackgroundScene>\r\n        : null}\r\n      </>\r\n    const sessionStatus =\r\n      <>\r\n        <div className={styles.sessionStatus}>\r\n          <span>Выражений: {this.state.expressions.length}</span>\r\n          <span>Основных множителей: {this.mainFactors.length + 1}</span>\r\n        </div>\r\n      </>\r\n    return (\r\n        <div className={styles.app} //AppDiv !\r\n          ref={appRef => { this.appRef = appRef }}\r\n          onKeyDown={this.nextExpr_handleKeyDown_AppDiv} // верный ответ принимается по нажатию клавиши\r\n          tabIndex=\"0\"\r\n        >\r\n        {resultsOfChecking}\r\n        {/* header */}\r\n        <header className={styles.center}>\r\n          <Timer\r\n            checkKnowledge={this.state.options.checkKnowledge}\r\n            timer={timer}\r\n          />\r\n          <label>Основной множитель</label>\r\n          <input value={this.state.mainFactor} onChange={this.changeMainFactor_handleChange} type=\"number\"></input>\r\n          {options}\r\n        </header>\r\n\r\n        {/* board */}\r\n        <section className={styles.center}>\r\n            <Expression\r\n              expressions={this.state.expressions}\r\n              expCurNum={this.state.expCurNum}\r\n              mainFactor={this.state.mainFactor}\r\n              userInput={this.state.userInput}\r\n              receivedRightAnswer={this.state.receivedRightAnswer}\r\n              checkAnswer={this.checkAnswer_handleKeyUp_input}\r\n              changeAnswer={this.changeAnswer_handleChange}\r\n              checkKnowledgeIsEnd={this.state.checkKnowledgeIsEnd}\r\n              checkKnowledge={this.state.options.checkKnowledge}\r\n              seconds={this.state.seconds}\r\n              isMobileMode={this.state.options.isMobileMode}\r\n              checkMobAnswer={this.checkMobAnswer_handleClick}\r\n            />\r\n\r\n        </section>\r\n\r\n        {/* footer */}\r\n        <footer>\r\n          {sessionStatus}\r\n          {/* дополнительный функционал */}\r\n          {addFucn}\r\n        </footer>\r\n        {/* journal */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  delCurExpression_handleClick = () => {\r\n    if (this.state.expressions.length > 1) {\r\n      const expressions = [...this.state.expressions];\r\n      expressions.splice(this.state.expCurNum, 1);\r\n      const expNextNum = Math.floor(Math.random() * expressions.length);\r\n      this.setState({\r\n        expressions: expressions,\r\n        expCurNum: expNextNum,\r\n      });\r\n    } else if (this.mainFactors.length > 0 && !this.state.options.checkKnowledge) {\r\n      const mainFactor = this.mainFactors.splice(0, 1)[0];\r\n      const expressions = this.getExps(mainFactor);\r\n      const expNextNum = Math.floor(Math.random() * expressions.length);\r\n      this.setState({\r\n        mainFactor: mainFactor,\r\n        expressions: expressions,\r\n        expCurNum: expNextNum,\r\n      });\r\n    } else if (this.state.options.checkKnowledge) {\r\n      this.setState({ checkKnowledgeIsEnd: true })\r\n      this.changeMainFactor_handleChange(); // получить новый основной множитель\r\n    }\r\n  }\r\n\r\n  // измениние состояния - в текущем выражении убрать скрытый элемент, \r\n  // сохранив информацию о нём\r\n  showHideAnswer_handleClick = () => {\r\n    const index = this.state.expCurNum;\r\n    const expressions = [...this.state.expressions];\r\n    if (expressions[index].hidedPart !== 'nothing') {\r\n      expressions[index].showedPart = expressions[index].hidedPart;\r\n      expressions[index].hidedPart = 'nothing';\r\n    } else {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = \"\";\r\n    }\r\n    this.setState({ expressions: expressions });\r\n  }\r\n\r\n  nextEpression_handleClick = () => {\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    if (expressions[index].showedPart !== '') {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = '';\r\n    }\r\n    const nextExpNum = Math.floor(Math.random() * (expressions.length));\r\n    this.setState({\r\n      userInput: '',\r\n      expressions: expressions,\r\n      expCurNum: nextExpNum,\r\n    });\r\n  }\r\n\r\n  // изменение ответа\r\n  changeAnswer_handleChange = event => this.setState({ userInput: event.target.value });\r\n\r\n  getRightAnswer() {\r\n    let rightAnswer = 0;\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    const expression = expressions[index];\r\n    switch (expression.hidedPart) {\r\n      case 'factor1':\r\n        rightAnswer = expression.factor1;\r\n        break;\r\n      case 'factor2':\r\n        rightAnswer = expression.factor2;\r\n        break;\r\n      case 'result':\r\n        rightAnswer = expression.factor1 * expression.factor2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return rightAnswer;\r\n  }\r\n\r\n  // проверка ответа\r\n  checkAnswer_handleKeyUp_input = event => {\r\n    let rightAnswer = this.getRightAnswer();\r\n    if (this.state.options.checkKnowledge) { // режим проверки знаний\r\n      if (event.key === \"Enter\"\r\n        && parseInt(this.state.userInput) === parseInt(rightAnswer)  // получен верный ответ\r\n        && !this.state.checkKnowledgeIsEnd) {\r\n        this.delCurExpression_handleClick();\r\n        this.setState(prevState => ({\r\n          seconds: prevState.seconds + 5,\r\n          userInput: '',\r\n          rightAnswerCount: prevState.rightAnswerCount + 1,\r\n        }));\r\n        //  console.log('Режим проверки: ответ верный ', event.target.value);\r\n      } else if (event.key === \"Enter\" && !this.state.checkKnowledgeIsEnd) {\r\n        // ответ неправильный и нажата клавиша ввод\r\n        this.delCurExpression_handleClick();\r\n        this.setState(prevState => ({\r\n          errorsCount: prevState.errorsCount + 1,\r\n          userInput: '',\r\n        }));\r\n        // ? уменьшить очки\r\n\r\n        // ? сохранить ошибку для работы над ошибками\r\n      }\r\n    } else if (parseInt(event.target.value) === parseInt(rightAnswer)) { // правильный ответ получен\r\n      this.showNextEpr();\r\n    }\r\n  }\r\n\r\n  showNextEpr() {\r\n    // ответ верный: \r\n    // сбросить текущее значение ввод\r\n    this.setState({ userInput: '' })\r\n\r\n    // показать ответ, \r\n    // убрать поле ввода, \r\n    this.showHideAnswer_handleClick();\r\n\r\n    // отметить факт получения верного ответа\r\n    this.setState({ receivedRightAnswer: true })\r\n\r\n    // удалить данное выражение, но не сразу!\r\n    if (this.state.options.missEnter) {\r\n      setTimeout(() => {\r\n        this.delCurExpression_handleClick();\r\n        this.setState({ receivedRightAnswer: false });\r\n      }, 3000);\r\n    }\r\n    this.appRef.focus();\r\n  }\r\n\r\n  // для режима без паузы\r\n  nextExpr_handleKeyDown_AppDiv = event => {\r\n    if ((event.key === \"Enter\") && (this.state.receivedRightAnswer) && (!this.state.options.missEnter) && !this.state.options.checkKnowledge) {\r\n      this.delCurExpression_handleClick();\r\n      this.setState({ receivedRightAnswer: false })\r\n    }\r\n  }\r\n\r\n  missEnter_handleChange_optRBtn = e => {\r\n    const choice = e.target.value;\r\n    this.setState(prevState => ({\r\n      options: { ...prevState.options, missEnter: choice === \"miss Enter\" }\r\n    }));\r\n  }\r\n\r\n  checkKnowledge_handleChange_optRBtn = e => {\r\n    const choice = e.target.value;\r\n    this.setState(prevState => ({\r\n      options: { ...prevState.options, checkKnowledge: choice === \"start checking\" }\r\n    }))\r\n    this.changeMainFactor_handleChange();\r\n    this.setState({\r\n      seconds: 10,\r\n      errorsCount: 0,\r\n      rightAnswerCount: 0,\r\n    })\r\n  }\r\n\r\n  toggleOption = prop => {\r\n    this.setState(prevState => {\r\n      const options = prevState.options;\r\n      options[prop] = !options[prop];\r\n      return {\r\n        options: options,\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}