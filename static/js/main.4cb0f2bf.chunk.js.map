{"version":3,"sources":["App/App.module.css","Options/Options.module.css","Expression/Signs/Signs.module.css","Expression/Expression.module.css","Options/Options.js","Expression/Signs/Signs.js","Expression/Expression.js","AllExpressions/AllExpressions.js","stuff/modules.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","app","center","missEnter","sign","answerInput","userAnsweredRight","rightExpression","smallBigSmall","options","props","stateOptions","react_default","a","createElement","show","htmlFor","className","styles","type","name","id","value","onChange","changeRadioButton","checked","Signs","s","chars","autoFocus","maxLength","checkAnswer","userInput","style","verticalAlign","expression","exps","Object","toConsumableArray","expressions","i","expCurNum","factor1","Expression_Signs_Signs","factor2","result","hidedPart","receivedRightAnswer","allExpressions","exprs","showedAll","map","exp","index","Expression","key","Fragment","onClick","showHide","getExprs","mainFactor","leftLimit","rightLimit","length","arr","secondaryFactors","getFactors","factorX","mainFactorIsFirst","Math","random","splice","floor","concat","push","showedPart","border","addin","factors","temp","includes","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mainFactors","appDiv","setAppDiv","element","focusAppDiv","focus","showHideExpressions_handleClick","doesShow","state","showedAllExpressions","setState","changeMainFactor_handleChange","event","newMainFactor","target","changeTempFactorX_handleChange","tempFactor1","tempFactor2","addExpression_handleSubmit","rndHidedPart","toString","parseInt","preventDefault","alert","isNaN","delCurExpression_handleClick","showHideAnswer_handleClick","nextEpression_handleClick","checkAnswer_handleChange","rightAnswer","setTimeout","rightAnswerHandler_enterPress","missEnterOptionsHandler_radioButton","e","objectSpread","scores","ref","onKeyDown","tabIndex","Options","AllExpressions","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cb0f2bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__th-hl\",\"center\":\"App_center__3FCQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"missEnter\":\"Options_missEnter__1nxwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"Signs_sign__3zf5U\",\"answerInput\":\"Signs_answerInput__258kk\",\"userAnsweredRight\":\"Signs_userAnsweredRight__SLjrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightExpression\":\"Expression_rightExpression__3H7JL\",\"smallBigSmall\":\"Expression_smallBigSmall__2KNo0\"};","import React from 'react';\r\nimport styles from './Options.module.css';\r\n\r\nconst options = props => {\r\n    const stateOptions = props.options;  \r\n    return (\r\n        <div>\r\n            <button>Настройки</button>\r\n            {\r\n                stateOptions.show ?\r\n                <div>\r\n                    <label htmlFor=\"missEnter\">Ответ без клавиши Ввод:</label>\r\n                    <input\r\n                        className={styles.missEnter}\r\n                        type=\"radio\"\r\n                        name=\"missEnter\"\r\n                        id=\"cb1\"\r\n                        value=\"miss Enter\"\r\n                        onChange={props.changeRadioButton}\r\n                        checked={stateOptions.missEnter} />\r\n                    <label htmlFor=\"missEnter\">Ответ c клавишей Ввод:</label>\r\n                    <input\r\n                        className={styles.missEnter}\r\n                        type=\"radio\"\r\n                        name=\"missEnter\"\r\n                        id=\"cb2\"\r\n                        value=\"do not miss Enter\"\r\n                        onChange={props.changeRadioButton}\r\n                        checked={!stateOptions.missEnter} /> \r\n                </div> : null\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default options;","import React from 'react';\r\nimport styles from './Signs.module.css'\r\n\r\nconst Signs = (props) => {\r\n  let s = props.chars;\r\n  if (!s) \r\n  {\r\n    s =\r\n    <input \r\n      autoFocus\r\n      type=\"text\"\r\n      name=\"answer\"\r\n      maxLength={2}\r\n      className={styles.answerInput}\r\n      onChange={props.checkAnswer}\r\n      value={props.userInput}\r\n      id=\"\" />\r\n  } \r\n  let style = null;\r\n  switch (props.chars) {\r\n    case '*':\r\n      style = {verticalAlign: \"-15%\"}\r\n      break;\r\n    case '=':\r\n      style = {verticalAlign: \"10%\"}\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // height: 110%;\r\n  // padding-top: 0.2em;\r\n  // max-height: 0.9em;\r\n\r\n  return (\r\n    <span className={styles.sign} style={style}>\r\n      {s}\r\n    </span>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Signs;","import React from 'react';\r\nimport Signs from './Signs/Signs';\r\nimport styles from './Expression.module.css';\r\n\r\nconst expression = props => {\r\n    const exps = [...props.expressions];\r\n    const i = props.expCurNum;\r\n    // console.log(`Expression.js props=`, props);\r\n    let factor1 = <Signs chars={exps[i].factor1} />;\r\n    let factor2 = <Signs chars={exps[i].factor2} />\r\n    let result = <Signs chars={exps[i].factor1 * exps[i].factor2} />\r\n\r\n    switch (exps[i].hidedPart) {\r\n        case 'factor1':\r\n            factor1 =\r\n                <Signs chars=''\r\n                    checkAnswer={props.checkAnswer}\r\n                    userInput={props.userInput}/>\r\n            break;\r\n        case 'factor2':\r\n            factor2 =\r\n                <Signs chars=''\r\n                    checkAnswer={props.checkAnswer}\r\n                    userInput={props.userInput}/>\r\n            break;\r\n        case 'result':\r\n            result =\r\n                <Signs chars=''\r\n                    checkAnswer={props.checkAnswer}\r\n                    userInput={props.userInput} />\r\n            break;\r\n        default:\r\n\r\n            break;\r\n    }\r\n    let style = props.receivedRightAnswer ? styles.rightExpression : null;\r\n    return (\r\n        <div className={style}>\r\n            {factor1}\r\n            <Signs chars='*' />\r\n            {factor2}\r\n            <Signs chars='=' />\r\n            {result}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default expression;","import React from 'react';\r\nimport Expression from '../Expression/Expression';\r\n\r\nconst allExpressions = props => {\r\n    let exprs = null;\r\n    if (props.showedAll) {\r\n      exprs = props.expressions.map( (exp,index) => \r\n        <Expression\r\n          expressions={props.expressions}\r\n          expCurNum={index}\r\n          key={exp.key} />\r\n      )\r\n    }\r\n    return (\r\n        <>\r\n          <button onClick={props.showHide}>Показать все выражения</button>\r\n          {exprs}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default allExpressions;","// Генерация массива выражений для состояния App в конструкторе при первом запуске \r\n// и далее каждый раз при выборе нового основного множителя.\r\n// Подразумевается генерация номера текущего выражения будет в конструкторе \r\n// или позже, но перед функцией render().\r\n// На вход три аргумента: первый - основной множитель, второй и третий - \r\n// границы прочих множителей\r\n// Скрытая часть выражения при генерации определяется случайно\r\n// Порядок выражений определяется случайно при генерации\r\nexport const getExprs = (mainFactor, leftLimit, rightLimit) => {\r\n    const length = rightLimit - leftLimit + 1; //длина массива включая концы границ\r\n    const arr = [];\r\n    const secondaryFactors=getFactors(length, leftLimit);\r\n    // заполнение массива\r\n    for (let i = 0; i < length; i++) {\r\n        // множители, undefined\r\n        let factor1, factor2, factorX, mainFactorIsFirst;\r\n        (Math.random() < 0.5) ? mainFactorIsFirst = false : mainFactorIsFirst = true;\r\n        factorX = secondaryFactors.splice(0,1);\r\n        if (mainFactorIsFirst) {\r\n            factor1 = mainFactor;\r\n            factor2 = factorX[0];\r\n        } else {\r\n            factor1 = factorX[0];\r\n            factor2 = mainFactor;\r\n        }\r\n        // что скрывается?\r\n        let hidedPart = '';\r\n        switch (Math.floor(Math.random() * 3)) {\r\n            case 0:\r\n                hidedPart = 'factor1';\r\n                break;\r\n            case 1:\r\n                hidedPart = 'factor2';\r\n                break;\r\n            default:\r\n                hidedPart = 'result';\r\n                break;\r\n        }\r\n        // уникальный идентификатор - ключ\r\n        const key=`${i}-${Math.floor(Math.random() * 100)}`;\r\n        arr.push({factor1: factor1, factor2: factor2, hidedPart: hidedPart, showedPart: '', key:key});\r\n    }\r\n    return arr;\r\n}\r\n\r\n// массив вспомогательных множителей\r\n// аргументы: первый - правая граница (левая - 0), второй - модификатор\r\n// например, на вход - 3 и 0, на выходе [1, 0, 2]\r\n// например, на вход - 4 и 2, на выходе [3, 5, 4, 2]\r\nexport const getFactors = (border, addin) => {\r\n    let factors=[];\r\n    while (factors.length < border) {\r\n        const temp = Math.floor(Math.random() * border) + addin;\r\n        if ((factors.length === 0) || (!factors.includes(temp))) {\r\n            factors.push(temp);\r\n        } \r\n    }\r\n    // console.log(`factors=${factors}, len=${factors.length}`);\r\n    return factors;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport Options from '../Options/Options';\r\nimport Expression from '../Expression/Expression';\r\nimport AllExpressions from '../AllExpressions/AllExpressions';\r\n// import AddExression from '../AddExression/AddExression';\r\nimport {getExprs, getFactors} from '../stuff/modules';\r\n\r\nclass App extends Component {\r\n  mainFactors = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainFactor: -1,\r\n      expressions: [], // получить и установить выражения\r\n      expCurNum: 0,\r\n      userInput: '',\r\n      tempFactor1: 0, tempFactor2: 0,\r\n      showedAllExpressions: false,\r\n      receivedRightAnswer: false,\r\n      scores: 0,\r\n      options: {\r\n        show: false,\r\n        missEnter: false,\r\n        // режим с ограничением на время ?\r\n        // скрыите только произведения (result) - простой режим ?\r\n        // другие внешние виды\r\n      }\r\n    }\r\n    this.mainFactors = getFactors(9,1);\r\n    this.state.mainFactor = this.mainFactors.splice(0,1)[0]; // текущий основной множитель\r\n    this.state.expressions = getExprs(this.state.mainFactor, 1, 9); // выражения\r\n  }\r\n\r\n  appDiv = null;\r\n  setAppDiv = element => this.appDiv = element;\r\n  focusAppDiv = () => {\r\n    if (this.appDiv) this.appDiv.focus()\r\n  } \r\n\r\n  showHideExpressions_handleClick = () => {\r\n    const doesShow = this.state.showedAllExpressions;\r\n    this.setState({showedAllExpressions: !doesShow});\r\n  }\r\n\r\n  changeMainFactor_handleChange = event => {\r\n    const newMainFactor = event.target.value;\r\n    if ((0 < newMainFactor) && (newMainFactor < 10)) {\r\n      this.setState({\r\n        userInput:'',\r\n        receivedRightAnswer: false,\r\n        mainFactor: newMainFactor,\r\n        expressions: getExprs(newMainFactor, 1, 9)\r\n      });\r\n     }\r\n  }\r\n\r\n  changeTempFactorX_handleChange = event => {\r\n    (event.target.name === 'factor1') ? this.setState({tempFactor1: event.target.value}) : this.setState({tempFactor2: event.target.value}) \r\n  }\r\n  \r\n  addExpression_handleSubmit = event => {\r\n    const expressions = [...this.state.expressions];\r\n    let rndHidedPart = '';\r\n    switch (Math.floor(Math.random()*3)) {\r\n      case 0:\r\n        rndHidedPart = 'factor1';\r\n        break;\r\n      case 1:\r\n        rndHidedPart = 'factor2';\r\n        break;\r\n      default:\r\n          rndHidedPart = 'result';\r\n        break;\r\n    }\r\n    const key = `addedManually${expressions.length.toString()}`;\r\n    const expression = {\r\n      factor1: parseInt(this.state.tempFactor1), \r\n      factor2: parseInt(this.state.tempFactor2), \r\n      hidedPart: rndHidedPart,\r\n      showedPart: '',\r\n      key: key,\r\n    }\r\n    expressions.push(expression);\r\n    event.preventDefault(); //не дать выполнить действие по умолчанию - обновить страницу\r\n    if ((expression.factor1 === 0) || (expression.factor2 === 0))\r\n      alert(\"Множитель не должен быть равен 0\")\r\n    else if (isNaN(expression.factor1) || isNaN(expression.factor1))\r\n      alert(\"Множитель должен быть числом\")\r\n    else\r\n      this.setState({ expressions: expressions });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className = {styles.app}\r\n        ref = {this.setAppDiv}\r\n        onKeyDown={this.rightAnswerHandler_enterPress} // верный ответ принимается по нажатию клавиши\r\n        tabIndex=\"0\"\r\n      >\r\n        {/* header */}\r\n        <header className={styles.center}>\r\n          <label>Основной множитель</label>\r\n          <input value={this.state.mainFactor} onChange={this.changeMainFactor_handleChange} type=\"number\"></input>\r\n          <Options \r\n            // missEnter={this.state.options.missEnter}\r\n            options={this.state.options}\r\n            // showOptions={this.state.options.show}\r\n            changeRadioButton = {this.missEnterOptionsHandler_radioButton}\r\n          />\r\n        </header>\r\n        \r\n        {/* board */}\r\n        <section className = {styles.center}>\r\n          <Expression\r\n            expressions={this.state.expressions}\r\n            expCurNum={this.state.expCurNum}\r\n            userInput={this.state.userInput}\r\n            receivedRightAnswer={this.state.receivedRightAnswer}\r\n            checkAnswer={this.checkAnswer_handleChange} \r\n          />\r\n        </section>\r\n\r\n        {/* footer */}\r\n        <footer>\r\n\r\n          <button onClick={this.nextEpression_handleClick}>Другое выражение</button>\r\n          {/* <AddExression\r\n            factor1={this.state.tempFactor1}\r\n            factor2={this.state.tempFactor2}\r\n            addExp={this.addExpression_handleSubmit.bind(this)}\r\n            changeFactor={this.changeTempFactorX_handleChange.bind(this)}\r\n          /> */}\r\n          <button onClick={this.delCurExpression_handleClick}>Удалить текущее выражение</button>\r\n          <button onClick={this.showHideAnswer_handleClick} >Показать/скрыть ответ</button>\r\n          <AllExpressions\r\n            showedAll={this.state.showedAllExpressions}\r\n            expressions={this.state.expressions}\r\n            showHide={this.showHideExpressions_handleClick} />\r\n        </footer>\r\n\r\n        \r\n        {/* journal */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  delCurExpression_handleClick = () => {\r\n    if (this.state.expressions.length > 1) {\r\n      const expressions = [...this.state.expressions];\r\n      expressions.splice(this.state.expCurNum,1);\r\n      this.setState({expressions:expressions});\r\n      this.setState({expCurNum: Math.floor(Math.random()*(this.state.expressions.length-1))});\r\n    } else if (this.mainFactors.length>0) {\r\n      const mainFactor = this.mainFactors.splice(0,1)[0];\r\n      const expressions = getExprs(mainFactor, 1, 9);\r\n      this.setState({\r\n        mainFactor: mainFactor,\r\n        expressions: expressions,\r\n        expCurNum: Math.floor(Math.random()*(expressions.length-1)),\r\n      });\r\n    }\r\n  }\r\n  \r\n  // измениние состояния - в текущем выражении убрать скрытый элемент, \r\n  // сохранив информацию о нём\r\n  showHideAnswer_handleClick = () => {\r\n    const index = this.state.expCurNum;\r\n    const expressions = [...this.state.expressions];\r\n    if (expressions[index].hidedPart !== 'nothing') {\r\n      expressions[index].showedPart = expressions[index].hidedPart;\r\n      expressions[index].hidedPart = 'nothing';\r\n    } else  {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = \"\";\r\n    }\r\n    this.setState({expressions: expressions});\r\n  }\r\n\r\n  nextEpression_handleClick = () => {\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    if (expressions[index].showedPart !== '') {\r\n      expressions[index].hidedPart = expressions[index].showedPart;\r\n      expressions[index].showedPart = '';\r\n    }\r\n      this.setState({userInput:''});\r\n      this.setState({expressions: expressions});\r\n      this.setState({expCurNum: Math.floor(Math.random()*this.state.expressions.length)});\r\n  }\r\n  \r\n  checkAnswer_handleChange = event => {\r\n    \r\n    // if (event.keyCode === 13) { // нажата клавиша Enter\r\n    //     alert('Требуется проверка ответа?')\r\n    // }\r\n    let rightAnswer = 0;\r\n    const expressions = [...this.state.expressions];\r\n    const index = this.state.expCurNum;\r\n    const expression = expressions[index];\r\n    switch (expression.hidedPart) {\r\n      case 'factor1':\r\n        rightAnswer = expression.factor1;\r\n        break;\r\n      case 'factor2':\r\n        rightAnswer = expression.factor2;\r\n        break;\r\n      case 'result':\r\n        rightAnswer = expression.factor1*expression.factor2;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // правильный ответ?\r\n    if (parseInt(event.target.value) === parseInt(rightAnswer)) {\r\n      // ответ верный: \r\n      // сбросить текущее значение ввод\r\n      this.setState({userInput: ''})\r\n      \r\n      // показать ответ, \r\n      // убрать поле ввода, \r\n      this.showHideAnswer_handleClick();\r\n      \r\n      // отметить факт верного выражения\r\n      this.setState({receivedRightAnswer: true})\r\n      \r\n      // удалить данное выражение, но не сразу! // условие - включено в настройках?\r\n      if (this.state.options.missEnter) {\r\n        setTimeout(() => {\r\n          this.delCurExpression_handleClick();\r\n          this.setState({ receivedRightAnswer: false })\r\n        }, 3000);\r\n      }\r\n      this.focusAppDiv();\r\n    } else {     \r\n      // верный ответ не получен, продолжаем ввод\r\n      this.setState({userInput: event.target.value})\r\n    }\r\n  }\r\n\r\n  rightAnswerHandler_enterPress = event => {\r\n    if ((event.key === \"Enter\") && (this.state.receivedRightAnswer) && (!this.state.options.missEnter)) { // добавить условие - включено в настройках?\r\n      this.delCurExpression_handleClick();\r\n      this.setState({ receivedRightAnswer: false })\r\n    }\r\n  }\r\n\r\n  missEnterOptionsHandler_radioButton = e => {\r\n    let options = {...this.state.options};\r\n    (e.target.value === \"miss Enter\") ? options.missEnter = true : options.missEnter = false;\r\n    this.setState({options: options});\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}